/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20VestingVault,
  ERC20VestingVaultInterface,
} from "../../../contracts/Lockers/ERC20VestingVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "vestingId",
        type: "uint256",
      },
    ],
    name: "GrantAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountVested",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountNotVested",
        type: "uint256",
      },
    ],
    name: "GrantRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountClaimed",
        type: "uint256",
      },
    ],
    name: "GrantTokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_vestingDurationInDays",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "_vestingCliffInDays",
        type: "uint16",
      },
    ],
    name: "addTokenGrant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_grantId",
        type: "uint256",
      },
    ],
    name: "calculateGrantClaim",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_grantId",
        type: "uint256",
      },
    ],
    name: "claimVestedTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "getActiveGrants",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenGrants",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "vestingDuration",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "vestingCliff",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "daysClaimed",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "totalClaimed",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_grantId",
        type: "uint256",
      },
    ],
    name: "tokensVestedPerDay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVestingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080346100b257601f610b2538819003918201601f19168301916001600160401b038311848410176100b7578084926020946040528339810103126100b257516001600160a01b0390818116908190036100b25760008054336001600160a01b03198083168217845560405195909392167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a382156100af57506001541617600155610a5790816100ce8239f35b80fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c90816332b1c5b7146108475781635ca2fc531461054c5781636fc559bb146104d4578163715018a61461047a5781637935510b146102c25781638bf1ad4c146102125781638da5cb5b146101ea57816399d508c0146101cc578163f09dafb21461018e578163f2fde38b146100c7575063fc0c546a1461009c57600080fd5b346100c357816003193601126100c35760015490516001600160a01b039091168152602090f35b5080fd5b90503461018a57602036600319011261018a576100e2610876565b906100eb610891565b6001600160a01b0391821692831561013857505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b90503461018a57602036600319011261018a57816020936101c592358152600285522061ffff6002600183015492015416906108e9565b9051908152f35b90503461018a578260031936011261018a5760209250549051908152f35b5050346100c357816003193601126100c357905490516001600160a01b039091168152602090f35b8284346102bf57602090816003193601126102bf5782906001600160a01b03610239610876565b16815260038352818120908251808584549182815201908194845286842090845b8181106102ab5750505081610270910382610909565b83519485948186019282875251809352850193925b82811061029457505050500390f35b835185528695509381019392810192600101610285565b82548452928801926001928301920161025a565b80fd5b8383346100c35760208060031936011261018a578335936102e285610964565b919095821561044357855260028352838520956002870161ffff9182808354881c169116019182116104305790610331919065ffff0000000082549160201b169065ffff000000001916179055565b60038601805490838201809211610430575560018060a01b039085848284600154169901986044858b54168951948593849263a9059cbb60e01b8452888401528960248401525af19081156104265787916103ec575b50156103bd57507fc6cbb4aa8681b18644bf64921eea8f2b9f44cbd58d64fc07a110bfccc203829693949554169351908152a280f35b845162461bcd60e51b815290810184905260096024820152686e6f20746f6b656e7360b81b6044820152606490fd5b90508481813d831161041f575b6104038183610909565b8101031261041b5751801515810361041b5788610387565b8680fd5b503d6103f9565b86513d89823e3d90fd5b634e487b7160e01b875260118352602487fd5b845162461bcd60e51b815280830185905260116024820152700616d6f756e74566573746564206973203607c1b6044820152606490fd5b83346102bf57806003193601126102bf57610493610891565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b90503461018a57602036600319011261018a578160e093823581526002602052209081549260018301549260028101549060038101549360018060a01b0391015416938251958652602086015261ffff9182821690860152818160101c16606086015260201c16608084015260a083015260c0820152f35b9190503461018a5760a036600319011261018a57610568610876565b6024906044359061ffff833560643582811690819003610843576084359183831680930361083f57610598610891565b610e428311610808576123a582116107d15782821061079c576105bb82876108e9565b15610761578061075b575042925b87519360e0850185811067ffffffffffffffff82111761074957928a949261067f928d999897958c528552602085019788528a8501918252606085019384526080850189815260a08601948a865260c08701998d60018060a01b03809b169c8d8d528a54815260026020522097518855516001880155826002880194511663ffff00008554925160101b169163ffffffff191617178355511665ffff0000000082549160201b169065ffff000000001916179055565b516003820155019151166bffffffffffffffffffffffff60a01b82541617905580855260036020528285208454908054906801000000000000000082101561073757600182018082558210156107255787526020872001557f9d2a1eab91557a277ec725fe26546609d5a33a550c3f3476982ee177252be8f4602085549451858152a260001982146107145750600101905580f35b634e487b7160e01b84526011835283fd5b634e487b7160e01b8852603287528488fd5b634e487b7160e01b8852604187528488fd5b634e487b7160e01b8c5260418b52888cfd5b926105c9565b875162461bcd60e51b81526020818b0152601681890152750616d6f756e74566573746564506572446179203e20360541b6044820152606490fd5b875162461bcd60e51b81526020818b01526010818901526f223ab930ba34b7b7101e1021b634b33360811b6044820152606490fd5b875162461bcd60e51b81526020818b0152601281890152716d6f7265207468616e20323520796561727360701b6044820152606490fd5b875162461bcd60e51b81526020818b0152601281890152716d6f7265207468616e20313020796561727360701b6044820152606490fd5b8980fd5b8880fd5b905082346102bf5760203660031901126102bf57506108669035610964565b61ffff8351921682526020820152f35b600435906001600160a01b038216820361088c57565b600080fd5b6000546001600160a01b031633036108a557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b81156108f3570490565b634e487b7160e01b600052601260045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761092b57604052565b634e487b7160e01b600052604160045260246000fd5b9190820391821161094e57565b634e487b7160e01b600052601160045260246000fd5b9060009182526002602052604082208054804210610a1b5761098a620151809142610941565b049260028201549361ffff90818660101c168110610a1357858216958682106109c8575050505080600360016109c593015491015490610941565b90565b916109e0600192826109e996999560201c1690610941565b169301546108e9565b928382029382850414821517156109ff57509190565b634e487b7160e01b81526011600452602490fd5b169350919050565b5050819056fea2646970667358221220e93bc4c825a4a57c661375dfbea8b813bc112f30275a28470a52f7687f9ab51364736f6c63430008110033";

type ERC20VestingVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20VestingVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20VestingVault__factory extends ContractFactory {
  constructor(...args: ERC20VestingVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20VestingVault> {
    return super.deploy(_token, overrides || {}) as Promise<ERC20VestingVault>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): ERC20VestingVault {
    return super.attach(address) as ERC20VestingVault;
  }
  override connect(signer: Signer): ERC20VestingVault__factory {
    return super.connect(signer) as ERC20VestingVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20VestingVaultInterface {
    return new utils.Interface(_abi) as ERC20VestingVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20VestingVault {
    return new Contract(address, _abi, signerOrProvider) as ERC20VestingVault;
  }
}
