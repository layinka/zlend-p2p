/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CoinVestingVault,
  CoinVestingVaultInterface,
} from "../../../contracts/Lockers/CoinVestingVault";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountClaimed",
        type: "uint256",
      },
    ],
    name: "GrantTokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "SECONDS_PER_DAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calculateGrantClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimVestedCoins",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "grant",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vestingDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vestingCliff",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "daysClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalClaimed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vaultOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_vestingDurationInDays",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_vestingCliffInDays",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensVestedPerDay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080806040523461001657610704908161001c8239f35b600080fdfe6080604081815260049081361015610022575b505050361561002057600080fd5b005b600092833560e01c90816330c3eaa81461059b5750806374f0314f1461057d5780638da5cb5b146105515780639b3e28fd14610488578063d310556b1461045b578063d507ad1914610434578063e7b5fc1714610406578063f2fde38b146103725763f92ad21903610012573461036e5760a036600319011261036e576100a76105e6565b906024928335604494853592606493843592608435948a549660ff8860081c161597888099610361575b801561034a575b156102f15760ff1981166001178d55886102e0575b50600180546001600160a01b031916331790558b5462010000600160b01b0319811660109b909b1b62010000600160b01b03169a8b178d55999a610e4288116102ac576123a58711610278578787106102465761014a8786610601565b1561020e57505080610208575042905b87519060c082019082821067ffffffffffffffff8311176101f757508b9160a0918a52838152846020820152868a82015287606082015282608082015201526002556003555560055584600655846007556101b3578380f35b610100600160b01b0319909116909117825551600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a13880808380f35b634e487b7160e01b8d52604186528cfd5b9061015a565b750616d6f756e74566573746564506572446179203e20360541b869160168660208e519562461bcd60e51b8752860152840152820152fd5b6f223ab930ba34b7b7101e1021b634b33360811b869160108660208e519562461bcd60e51b8752860152840152820152fd5b716d6f7265207468616e20323520796561727360701b869160128660208e519562461bcd60e51b8752860152840152820152fd5b716d6f7265207468616e20313020796561727360701b869160128660208e519562461bcd60e51b8752860152840152820152fd5b61ffff1916610101178c55386100ed565b50846d191e481a5b9a5d1a585b1a5e995960921b6084927f496e697469616c697a61626c653a20636f6e747261637420697320616c7265618e602e888f602090519762461bcd60e51b8952880152860152840152820152fd5b50303b1580156100d85750600160ff8216146100d8565b50600160ff8216106100d1565b8280fd5b50903461036e57602036600319011261036e5761038d6105e6565b835492909190601084901c6001600160a01b031633036103ce57505062010000600160b01b031990911660109190911b62010000600160b01b031617815580f35b906020606492519162461bcd60e51b8352820152601260248201527113db9b1e4813dddb995c88105b1b1bddd95960721b6044820152fd5b5082346104315780600319360112610431575061042a602092600354905490610601565b9051908152f35b80fd5b5082346104315780600319360112610431575061044f610644565b82519182526020820152f35b83823461048457816003193601126104845760015490516001600160a01b039091168152602090f35b5080fd5b50903461036e578260031936011261036e57825460101c6001600160a01b0316916104b1610644565b92831561051a57506104c5906006546106c1565b6006556104d4826007546106c1565b60075583808080858782f115610511577fc6cbb4aa8681b18644bf64921eea8f2b9f44cbd58d64fc07a110bfccc20382969160209151908152a280f35b513d84823e3d90fd5b606490602084519162461bcd60e51b835282015260116024820152700616d6f756e74566573746564206973203607c1b6044820152fd5b8382346104845781600319360112610484579054905160109190911c6001600160a01b03168152602090f35b83823461048457816003193601126104845760209051620151808152f35b929050346105e257836003193601126105e25760c09350600254916003549154600554916006549360075495875260208701528501526060840152608083015260a0820152f35b8380fd5b600435906001600160a01b03821682036105fc57565b600080fd5b811561060b570490565b634e487b7160e01b600052601260045260246000fd5b9190820391821161062e57565b634e487b7160e01b600052601160045260246000fd5b6002548042106106b85761065c620151809142610621565b049060055482106106b35760045491828110610685575061068260035460075490610621565b90565b61069561069e9160065490610621565b92600354610601565b9182810292818404148115171561062e579190565b600090565b50600090600090565b9190820180921161062e5756fea2646970667358221220ab9d59f8f46e80f2d0b9bec45c225caf66078963c13d02734312ed44f015792b64736f6c63430008110033";

type CoinVestingVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CoinVestingVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CoinVestingVault__factory extends ContractFactory {
  constructor(...args: CoinVestingVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CoinVestingVault> {
    return super.deploy(overrides || {}) as Promise<CoinVestingVault>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CoinVestingVault {
    return super.attach(address) as CoinVestingVault;
  }
  override connect(signer: Signer): CoinVestingVault__factory {
    return super.connect(signer) as CoinVestingVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoinVestingVaultInterface {
    return new utils.Interface(_abi) as CoinVestingVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoinVestingVault {
    return new Contract(address, _abi, signerOrProvider) as CoinVestingVault;
  }
}
