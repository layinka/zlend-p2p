/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CampaignList,
  CampaignListInterface,
} from "../../contracts/CampaignList";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DexLockerFactory",
        name: "dexLockerFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "campaignImplementationAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "createdCampaignAddress",
        type: "address",
      },
    ],
    name: "CampaignCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_tokenCampaigns",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "allOwnersCampaigns",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "campaignAt",
    outputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignCreationPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256[10]",
        name: "capAndDate",
        type: "uint256[10]",
      },
      {
        internalType: "enum Campaign.RefundType",
        name: "_refundType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_dexRouterAddress",
        type: "address",
      },
      {
        internalType: "uint256[4]",
        name: "liquidityAllocationAndRates",
        type: "uint256[4]",
      },
      {
        internalType: "string[6]",
        name: "founderInfo",
        type: "string[6]",
      },
      {
        internalType: "bool[2]",
        name: "_useTokenOrRaisedFundsVesting",
        type: "bool[2]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "releaseDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "releaseAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasBeenClaimed",
            type: "bool",
          },
        ],
        internalType: "struct VestSchedule[8]",
        name: "teamTokenVestingDetails",
        type: "tuple[8]",
      },
      {
        internalType: "uint256[3]",
        name: "raisedFundVestingDetails",
        type: "uint256[3]",
      },
    ],
    name: "createNewCampaign",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "hasExistingCampaign",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setCampaignCreationPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "campaignAddress",
        type: "address",
      },
    ],
    name: "transferTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
    ],
    name: "tryGetCampaignByKey",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "tryGetCampaignByTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60803461012c576001600160401b0390601f61182338819003918201601f19168301918483118484101761013157808492604094855283398101031261012c5780516001600160a01b03808216939092909184900361012c576020015182811680910361012c5760009182549160018060a01b0319953387851617855560405193863391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08780a360c860075560c86008556509184e72a000600b5586600554161760055585600c541617600c5560e18083019183831090831117610118579082916117428339039082f090811561010c5750169060065416176006556040516115fa90816101488239f35b604051903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c9081630c89a0df14610eb9575080630ce12eb914610e9b5780631867ee8414610e165780633c3d5b6714610cf1578063715018a614610c975780638da5cb5b14610c7057806391d6823914610c525780639e4ad85b146102955780639ef057481461025f578063b4e64fa614610223578063c1ffec9c14610223578063c34052e0146101f4578063f2fde38b14610129578063f4ef1c06146101065763f56dc2d6146100c657600080fd5b34610103576020366003190112610103576020906001600160a01b0390604090826100ef611184565b168152600a84522054161515604051908152f35b80fd5b50346101035760203660031901126101035761012061122c565b600435600b5580f35b503461010357602036600319011261010357610143611184565b61014b61122c565b6001600160a01b039081169081156101a057600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461010357602036600319011261010357600435600052600260205260206040600020541515604051908152f35b5034610103576020366003190112610103576020906001600160a01b03906040908261024d611184565b168152600a8452205416604051908152f35b503461010357602036600319011261010357604061027e600435611594565b825191151582526001600160a01b03166020820152f35b506105e0366003190112610103576102ab611184565b3660431215610c4e576040519061014082018281106001600160401b038211176108515760405261016482368211610b19576024905b828210610c3e575050600281351015610c265761018435926001600160a01b0384168403610b1957366101c31215610c3a5760405190610320826111ad565b8161022492368411610b19576101a4905b848210610c2a5750506001600160401b03833511610b9f573660238435011215610b9f576040519260c084018481106001600160401b038211176108515760405283903660c482350111610b1e57888135600401925b60c48335018410610ba35750505050366102631215610b9f576040516103ac816111c8565b8061028491368311610b9b57610244905b838210610b83575050366102a31215610b1e576040519161010083018381106001600160401b038211176108515760405282903661058411610b7f57905b6105848210610b22575050366105a31215610b1e5760405192606084018481106001600160401b03821117610851576040526105e484368211610b1957610584905b828210610b0957505050600b543410610aab57600654604051631627905560e01b81526001600160a01b038a81166004830152909160209183916024918391165afa9081156109cf578b91610a7c575b5015610a18576001600160a01b038881168b52600a60205260408b2054166108a5575b6004805460010190819055610120860152600c54604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b815260609190911b6bffffffffffffffffffffffff191660148201526e5af43d82803e903d91602b57fd5bf360881b60288201526001600160a01b03906037908cf01698891561086757604051978860608101106001600160401b0360608b01111761085157606089016040908152338a523060208b01526001600160a01b038b8116918b019190915260055416968b3b1561084d5760405163e8a16fa560e01b81528d9a90999897969594939291908b60048c015b600382106108185750505060648a018b905b600a82106107fe57505050356101a48901526001600160a01b03166101c4880152876101e488015b600482106107e457505050610264860187905b600282106107c8575050506102a4850186905b60088210610793575050506105a4840185905b60038210610779575050610640610604850152506107048301916106448401855b60068110610747575050508284928192610624830152038183885af1801561073c57610724575b505061066b600454808552600360205283604086205561130c565b5033835260096020526040832060045490805490600160401b821015610710579061069b916001820181556112f4565b819291549060031b600019811b9283911b1691191617905560018060a01b03168252600a60205260408220816bffffffffffffffffffffffff60a01b825416179055600454906040519081527fa01c8e2b0a81830c2e4e199b4cb98ece9d41443b7f9ef51cbb778f0fa13b019d60203392a380f35b634e487b7160e01b86526041600452602486fd5b61072d9061119a565b610738578238610650565b8280fd5b6040513d84823e3d90fd5b919495509192602080610767600193610643198a820301875288516112b4565b96019301910190889594939291610629565b825181528996506020928301926001929092019101610608565b825180518252602081810151838201526040918201511515918301919091528b985090920191600191909101906060016105f5565b8251151581528b985060209283019260019290920191016105e2565b825181528c995060209283019260019290920191016105cf565b825181528f9c5060209283019260019290920191016105a7565b60019192939495969798999a9b9c9d5060208091838060a01b03865116815201930191018f9c9b9a9998979695949392610595565b8c80fd5b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606490fd5b6040808b20549051631006976960e11b81526001600160a01b0390911690602081600481855afa908115610a0d578c916109ee575b5060058110156109da57600214908115610950575b506104b05760405162461bcd60e51b815260206004820152602e60248201527f43616d706169676e466163746f72793a20546865726520697320616e2045786960448201526d39ba34b7339021b0b6b830b4b3b760911b6064820152608490fd5b604051631006976960e11b81529150602090829060049082905afa9081156109cf578b916109a0575b50600581101561098c57600314386108ef565b634e487b7160e01b8b52602160045260248bfd5b6109c2915060203d6020116109c8575b6109ba81836111e3565b81019061129c565b38610979565b503d6109b0565b6040513d8d823e3d90fd5b634e487b7160e01b8c52602160045260248cfd5b610a07915060203d6020116109c8576109ba81836111e3565b386108da565b6040513d8e823e3d90fd5b60405162461bcd60e51b815260206004820152603660248201527f43616d706169676e466163746f72793a20526571756972657320546f6b656e41604482015275032323932b9b9903a379031329031b7b73a3930b1ba160551b6064820152608490fd5b610a9e915060203d602011610aa4575b610a9681836111e3565b810190611284565b3861048d565b503d610a8c565b60405162461bcd60e51b815260206004820152603060248201527f43616d706169676e466163746f72793a2052657175697265732043616d70616960448201526f676e4372656174696f6e20507269636560801b6064820152608490fd5b813581526020918201910161043d565b600080fd5b8880fd5b6060908183360312610b7b576040519081838101106001600160401b038484011117610851576060928201604052833582526020918285013583820152610b6b6040860161121f565b60408201528152019101906103fb565b8b80fd5b8a80fd5b60208091610b908461121f565b8152019101906103bd565b8980fd5b8680fd5b8335906001600160401b038211610738573660238386350101121561073857610bd26004838635010135611204565b610bdf60405191826111e3565b84358301600481013580835236910160240111610c265760209384938490600490883581018083013590602401868501378835010135830101528152019201918990610387565b8380fd5b8135815260209182019101610331565b8480fd5b81358152602091820191016102e1565b5080fd5b50346101035780600319360112610103576020600154604051908152f35b5034610103578060031936011261010357546040516001600160a01b039091168152602090f35b5034610103578060031936011261010357610cb061122c565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461010357604036600319011261010357600435602491823591610d15836113a4565b610d2260405191826111e3565b838152610d2e846113a4565b6020919082820190601f1901368237835b610d4987866113bb565b811015610dd35733865260098452610d6481604088206112f4565b905486830391838311610dc0578551831015610dad5760031b1c60059190911b84018501526000198114610d9a57600101610d3f565b634e487b7160e01b865260116004528786fd5b634e487b7160e01b895260326004528a89fd5b634e487b7160e01b895260116004528a89fd5b509192509260405193838594850191818652518092526040850193925b828110610dff57505050500390f35b835185528695509381019392810192600101610df0565b50346101035760203660031901126101035760043590600154821015610e855760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690910154808252600360209081526040928390205483519283526001600160a01b031690820152f35b634e487b7160e01b600052603260045260246000fd5b50346101035780600319360112610103576020600b54604051908152f35b82346101035760209182600319360112610c4e576001600160a01b036004358181169290839003610c2657638da5cb5b60e01b81528481600481865afa908115611106578491611167575b5081339116036111115760405163a69f631160e01b81528481600481865afa9081156111065784916110d9575b5060085460405163bf0a07bd60e01b8152929061271090048684600481885afa9384156110875786946110a6575b50838102938185041490151715611092576040516313aedd4b60e31b81528681600481885afa9081156110875790610fa29291879161105a575b501692826113bb565b604051906323b872dd60e01b8783015233602483015230604483015260648201526064815260a081018181106001600160401b038211176107105791610ff261101f9492879894604052836113fd565b6040519263a9059cbb60e01b9084015284602484015260448301526044825261101a826111ad565b6113fd565b803b15611057578190600460405180948193633e27f40d60e21b83525af1801561073c5761104b575080f35b6110549061119a565b80f35b50fd5b61107a9150883d8a11611080575b61107281836111e3565b8101906113de565b88610f99565b503d611068565b6040513d88823e3d90fd5b634e487b7160e01b85526011600452602485fd5b9093508681813d83116110d2575b6110be81836111e3565b810103126110ce57519287610f5f565b8580fd5b503d6110b4565b90508481813d83116110ff575b6110f081836111e3565b81010312610c26575185610f31565b503d6110e6565b6040513d86823e3d90fd5b60405162461bcd60e51b815260048101859052602860248201527f43414d504149474e4c6973743a205472616e7366657220746f6b656e202d204e60448201526737ba1027bbb732b960c11b6064820152608490fd5b61117e9150853d87116110805761107281836111e3565b85610f04565b600435906001600160a01b0382168203610b1957565b6001600160401b03811161085157604052565b608081019081106001600160401b0382111761085157604052565b604081019081106001600160401b0382111761085157604052565b90601f801991011681019081106001600160401b0382111761085157604052565b6001600160401b03811161085157601f01601f191660200190565b35908115158203610b1957565b6000546001600160a01b0316330361124057565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90816020910312610b1957518015158103610b195790565b90816020910312610b1957516005811015610b195790565b919082519283825260005b8481106112e0575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016112bf565b8054821015610e855760005260206000200190600090565b60008181526002602052604081205461139f57600154600160401b81101561138b5760018101806001558110156113775790826040927fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6015560015492815260026020522055600190565b634e487b7160e01b82526032600452602482fd5b634e487b7160e01b82526041600452602482fd5b905090565b6001600160401b0381116108515760051b60200190565b919082018092116113c857565b634e487b7160e01b600052601160045260246000fd5b90816020910312610b1957516001600160a01b0381168103610b195790565b6040516001600160a01b039190911691611416826111c8565b6020928383527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656484840152803b1561150b57600082819282876114879796519301915af13d15611503573d9061146b82611204565b9161147960405193846111e3565b82523d60008684013e611550565b8051908161149457505050565b82806114a4938301019101611284565b156114ac5750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b606090611550565b60405162461bcd60e51b815260048101859052601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b9091901561155c575090565b81511561156c5750805190602001fd5b60405162461bcd60e51b8152602060048201529081906115909060248301906112b4565b0390fd5b600052600360205260406000205480156000146115bf57506002602052604060002054151590600090565b60019156fea2646970667358221220ba6bf6ce7fa6001d37d5bd4f18361a4f00d33167c8c40077b32104607b9ad97764736f6c63430008110033608080604052346100155760c6908161001b8239f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c631627905514602857600080fd5b34608c576020366003190112608c576004356001600160a01b0381168103608857602092503f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708114159081607f575b5015158152f35b90501515386078565b8280fd5b5080fdfea26469706673582212203f5f5cecdc07f56aac3406ba231549ac8e9323c683c982928f6df1a7a1164e5164736f6c63430008110033";

type CampaignListConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignListConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CampaignList__factory extends ContractFactory {
  constructor(...args: CampaignListConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    dexLockerFactory: PromiseOrValue<string>,
    campaignImplementationAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CampaignList> {
    return super.deploy(
      dexLockerFactory,
      campaignImplementationAddress,
      overrides || {}
    ) as Promise<CampaignList>;
  }
  override getDeployTransaction(
    dexLockerFactory: PromiseOrValue<string>,
    campaignImplementationAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      dexLockerFactory,
      campaignImplementationAddress,
      overrides || {}
    );
  }
  override attach(address: string): CampaignList {
    return super.attach(address) as CampaignList;
  }
  override connect(signer: Signer): CampaignList__factory {
    return super.connect(signer) as CampaignList__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignListInterface {
    return new utils.Interface(_abi) as CampaignListInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CampaignList {
    return new Contract(address, _abi, signerOrProvider) as CampaignList;
  }
}
