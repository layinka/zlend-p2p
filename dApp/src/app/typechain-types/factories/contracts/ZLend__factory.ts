/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ZLend, ZLendInterface } from "../../contracts/ZLend";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountInDollars",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAmountAvailableForBorrowInDollars",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "userPresent",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "userIndex",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "borrowers",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentUserTokenBorrowedAmount",
        type: "uint256",
      },
    ],
    name: "Borrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "index",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmountBorrowed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalTokenAmountToCollectFromUser",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "borrowers",
        type: "address[]",
      },
    ],
    name: "PayDebt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "lenders",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentUserTokenLentAmount",
        type: "uint256",
      },
    ],
    name: "Supply",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenToWithdrawInDollars",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "availableToWithdraw",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAmountLentInDollars",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "larTokenToRemove",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenToUsdPriceFeed",
        type: "address",
      },
    ],
    name: "addTokenToPriceFeedMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "LTV",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowStableRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestRate",
        type: "uint256",
      },
    ],
    name: "addTokensForBorrowing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "LTV",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowStableRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestRate",
        type: "uint256",
      },
    ],
    name: "addTokensForLending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "borrowers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getAmountInDollars",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBorrowersArray",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLendersArray",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getRemainingCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTokenAvailableToWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getTokenFrom",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "LTV",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stableRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interestRate",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct zLend.Token",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokensForBorrowingArray",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "LTV",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stableRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interestRate",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct zLend.Token[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokensForLendingArray",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "LTV",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stableRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interestRate",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct zLend.Token[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTotalAmountBorrowedInDollars",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTotalAmountLentInDollars",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getTotalTokenBorrowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddres",
        type: "address",
      },
    ],
    name: "getTotalTokenSupplied",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserTotalAmountAvailableForBorrowInDollars",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currentUser",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "noOfTokenslentOrBorrowed",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokensLentOrBorrowed",
        type: "string",
      },
    ],
    name: "hasLentOrBorrowedToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenBorrowed",
        type: "uint256",
      },
    ],
    name: "interest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "larToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lenders",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "noOfTokensBorrowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "noOfTokensLent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "oneTokenEqualsHowManyDollars",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenToPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokensBorrowed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokensBorrowedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokensForBorrowing",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "LTV",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stableRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestRate",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokensForLending",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "LTV",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stableRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestRate",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokensLent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokensLentAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608034620000b957601f620034f838819003918201601f19168301916001600160401b03831184841017620000be57808492602094604052833981010312620000b957516001600160a01b039081811690819003620000b95760008054336001600160a01b03198083168217845560405195909392167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a36001805580600c55600d55600b541617600b556134239081620000d58239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040526004361015610013575b600080fd5b60003560e01c806306254c6a1461030b57806308ae7fc21461030257806311f4f5d3146102f95780631419f093146102f05780631818dd0b146102e75780631c9e5224146102de57806327e8e184146102d55780633c9d5093146102cc578063447007fd146102c35780634b3fd148146102ba5780634fa9f5a4146102b1578063541d8338146102a85780636352b5681461029f578063715018a61461029657806374fd0ce01461028d5780637924d93f146102845780637b9ec9971461027b5780638078f22c146102725780638cf1806b146102695780638da5cb5b14610260578063929eea2114610257578063a2fb342d1461024e578063a7772b9714610245578063a8b741521461023c578063aac0bf9614610233578063ab56ee661461022a578063b3d16f8d14610221578063b9f09bb814610218578063cd9274091461020f578063d0450c9414610206578063d7a9a25c146101fd578063e6eff380146101f4578063f2fde38b146101eb578063f3fef3a3146101e2578063fb24af7f146101d9578063fc757b88146101d0578063fdc8070e146101c75763fe726f80146101bf57600080fd5b61000e611c6e565b5061000e611c3e565b5061000e611c0a565b5061000e611be3565b5061000e6119d5565b5061000e611911565b5061000e611793565b5061000e61176a565b5061000e6115a4565b5061000e611512565b5061000e6114f3565b5061000e611494565b5061000e611470565b5061000e61144c565b5061000e6113fc565b5061000e6113d8565b5061000e611212565b5061000e6111c8565b5061000e61119e565b5061000e61112b565b5061000e6110ef565b5061000e6110cb565b5061000e611081565b5061000e610fd1565b5061000e610f72565b5061000e610f4e565b5061000e610f2f565b5061000e610ed2565b5061000e610c58565b5061000e610b68565b5061000e610ae9565b5061000e610a4c565b5061000e6109b4565b5061000e610734565b5061000e610710565b5061000e6106cb565b5061000e6105dc565b5061000e610340565b600435906001600160a01b038216820361000e57565b602435906001600160a01b038216820361000e57565b503461000e57602036600319011261000e57602061036461035f610314565b6131cc565b604051908152f35b50634e487b7160e01b600052603260045260246000fd5b600590600a548110156103bf575b600a600052027fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80190600090565b6103c761036c565b610391565b6005906009548110156103f6575b6009600052026000805160206133ce8339815191520190600090565b6103fe61036c565b6103da565b90600182811c92168015610433575b602083101461041d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610412565b50634e487b7160e01b600052604160045260246000fd5b60a0810190811067ffffffffffffffff82111761047057604052565b61047861043d565b604052565b6040810190811067ffffffffffffffff82111761047057604052565b90601f8019910116810190811067ffffffffffffffff82111761047057604052565b90604051918260008254926104cf84610403565b90818452600194858116908160001461053e57506001146104fb575b50506104f992500383610499565b565b9093915060005260209081600020936000915b8183106105265750506104f9935082010138806104eb565b8554888401850152948501948794509183019161050e565b9150506104f994506020925060ff191682840152151560051b82010138806104eb565b60005b8381106105745750506000910152565b8181015183820152602001610564565b9060209161059d81518092818552858086019101610561565b601f01601f1916010190565b919260a0936105d9969592600180871b031684526020840152604083015260608201528160808201520190610584565b90565b503461000e57602036600319011261000e5760043560095481101561000e5760059060096000520260018060a01b03816000805160206133ce8339815191520154166106c77f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0830154927f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b1810154906106ba7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b37f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b283015492016104bb565b91604051958695866105a9565b0390f35b503461000e57604036600319011261000e576020670de0b6b3a764000061070760406106fd6106f8610314565b612924565b01516024356126a3565b04604051908152f35b503461000e57602036600319011261000e57602061036461072f610314565b61277a565b503461000e57604036600319011261000e577ff17f5805b2095d17ffe834aff3fc2eeff114bfbc250e98f248783f8d34d4004261076f610314565b60243561078160026001541415611f78565b6002600155610791811515611fc4565b61089f6108926107a86107a2611f4f565b33612611565b926107b66000851215611fc4565b6001600160a01b03851660009081526005602052604090206107ec9033905b9060018060a01b0316600052602052604060002090565b54946107f9861515611fc4565b61088b6040610883670de0b6b3a76400009361084061082f866108288d8761082087612924565b0151906126a3565b04886124d0565b30336001600160a01b0385166121a5565b6001600160a01b03811660009081526005602052604090206108639033906107d5565b61086e8782546124f4565b90556108793361277a565b156108ad57612924565b0151876126a3565b04906124d0565b60405193849333856125e3565b0390a16108ab60018055565b005b6109086108db6108c66108c16003546124e5565b61101b565b905460039190911b1c6001600160a01b031690565b6108e48b61101b565b90919082549060031b9160018060a01b039283811b93849216901b16911916179055565b6106f8612501565b9060a060806105d993600180841b0381511684526020810151602085015260408101516040850152606081015160608501520151918160808201520190610584565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106109865750505050505090565b90919293949584806109a4600193603f198682030187528a51610910565b9801930193019194939290610976565b503461000e57600036600319011261000e5760095467ffffffffffffffff8111610a3f575b60405190600560206109ef83831b820185610499565b8284528084019060096000526000805160206133ce8339815191526000925b858410610a2357604051806106c78982610952565b8483600192610a3185611cf0565b815201920193019290610a0e565b610a4761043d565b6109d9565b503461000e57604036600319011261000e576020610a9c610a6b610314565b610a7361032a565b6001600160a01b0391821660009081526004855260408082209290931681526020919091522090565b54604051908152f35b6020908160408183019282815285518094520193019160005b828110610acc575050505090565b83516001600160a01b031685529381019392810192600101610abe565b503461000e57600036600319011261000e576040518060025491828152602080910192600260005260008051602061338e833981519152916000905b828210610b48576106c785610b3c81890382610499565b60405191829182610aa5565b83546001600160a01b031686529485019460019384019390910190610b25565b503461000e57602036600319011261000e57600435600a5481101561000e57600590600a6000520260018060a01b03817fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80154166106c77fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a9830154927fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa810154906106ba7fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ac7fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ab83015492016104bb565b503461000e57604036600319011261000e577f699548a5535b752f15032eb2be1672b2e5e62ddc5d461d4edb5a9321d7cbd252600435610c9661032a565b610ca560026001541415611f78565b6002600155610cc3610cbe610cb8611d3f565b83612b34565b611fc4565b610cce821515611fc4565b61089f610cda33612995565b92610ce58382612bd1565b92610cf285851115611fc4565b6040516370a0823160e01b8152306004820152610d449083906001600160a01b03841690610d3d908390602081602481875afa908115610e53575b600091610e25575b50101561242e565b3390612148565b610d95610d58610d52611f4f565b336123ce565b92909384600014610da457610d779084610d7061246f565b9184612e98565b6001600160a01b0316600090815260056020526040902033906107d5565b54916040519586953387612494565b610dad33611fe7565b6001600160a01b0382166000908152600560205260409020610dd09033906107d5565b55610e2081610e01600d54610dec610de7826120e2565b600d55565b6107d533916000526007602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b610d77565b610e46915060203d8111610e4c575b610e3e8183610499565b810190611fcb565b38610d35565b503d610e34565b610e5b611fda565b610d2d565b60209067ffffffffffffffff8111610e7e575b601f01601f19160190565b610e8661043d565b610e73565b81601f8201121561000e57803590610ea282610e60565b92610eb06040519485610499565b8284526020838301011161000e57816000926020809301838601378301015290565b503461000e57608036600319011261000e57610eec610314565b610ef461032a565b6064359067ffffffffffffffff821161000e57602092610f1b610f25933690600401610e8b565b916044359161305f565b6040519015158152f35b503461000e57600036600319011261000e576020600d54604051908152f35b503461000e57602036600319011261000e576020610364610f6d610314565b612657565b503461000e57600080600319360112610fce57610f8d611c98565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b503461000e57604036600319011261000e576020610fed61032a565b60043560009081526007835260408082206001600160a01b03938416835260205290205b5416604051908152f35b600354811015611041575b60036000526000805160206133ae8339815191520190600090565b61104961036c565b611026565b600254811015611074575b600260005260008051602061338e8339815191520190600090565b61107c61036c565b611059565b503461000e57602036600319011261000e5760043560035481101561000e5760036000526000805160206133ae83398151915201546040516001600160a01b039091168152602090f35b503461000e57602036600319011261000e5760206103646110ea610314565b612995565b503461000e57602036600319011261000e5760206001600160a01b0380611114610314565b166000526008825260406000205416604051908152f35b503461000e57600036600319011261000e57604051806003549182815260208091019260036000526000805160206133ae833981519152916000905b82821061117e576106c785610b3c81890382610499565b83546001600160a01b031686529485019460019384019390910190611167565b503461000e57600036600319011261000e576000546040516001600160a01b039091168152602090f35b503461000e57602036600319011261000e5760043560025481101561000e57600260005260008051602061338e83398151915201546040516001600160a01b039091168152602090f35b50604036600319011261000e577fbb33ffe04605a99e7885b3013bcc050161d1906b3611f09fed70a0c61e1f03de61089f61133e61124e610314565b61132060243561126360026001541415611f78565b600260015561127c610cbe611276611dd2565b85612b34565b611287811515611fc4565b6040516370a0823160e01b81523360048201526112db9082906001600160a01b038616906112d2908390602081602481875afa9081156113cb575b6000916113ad575b501015611fc4565b309033906121a5565b6112e6610d52611f67565b901561134c57611300906112f86120fe565b908386612e98565b600b546113189084906001600160a01b031692612bd1565b903390612148565b6001600160a01b0316600090815260046020526040902033906107d5565b546040519182913383612121565b5061135633612059565b80611377336107d58660018060a01b03166000526004602052604060002090565b556113a883610e01600c5461139361138e826120e2565b600c55565b6107d533916000526006602052604060002090565b611300565b6113c5915060203d8111610e4c57610e3e8183610499565b386112ca565b6113d3611fda565b6112c2565b503461000e57602036600319011261000e5760206103646113f7610314565b612822565b503461000e57604036600319011261000e576020610a9c61141b610314565b61142361032a565b6001600160a01b0391821660009081526005855260408082209290931681526020919091522090565b503461000e57602036600319011261000e57602061036461146b610314565b6126b6565b503461000e57602036600319011261000e57602061036461148f610314565b613267565b503461000e57604036600319011261000e576108ab6114b1610314565b6114b961032a565b906114c2611c98565b6001600160a01b03908116600090815260086020526040902080546001600160a01b03191692909116919091179055565b503461000e57600036600319011261000e576020600c54604051908152f35b503461000e57604036600319011261000e57602061152e61032a565b60043560009081526006835260408082206001600160a01b0393841683526020529020611011565b60a060031982011261000e576004359067ffffffffffffffff821161000e5761158191600401610e8b565b906024356001600160a01b038116810361000e5790604435906064359060843590565b503461000e576115b336611556565b6115bf93919293611c98565b604051906115cc82610454565b6001600160a01b039283168252602080830195865260408301948552606083019182526080830196875293611608611602611d3f565b84612b8b565b1561160f57005b600a5495600160401b87101561175d575b611631600197888101600a55610383565b949094611747575184546001600160a01b0319166001600160a01b03919096161694909417835560049351868401555160028301555160038201550192519081519167ffffffffffffffff831161173a575b611697836116918754610403565b87611e53565b81601f84116001146116d057509282939183926000946116c5575b50501b916000199060031b1c1916179055005b0151925038806116b2565b919083601f1981166116e788600052602060002090565b946000905b888383106117205750505010611707575b505050811b019055005b015160001960f88460031b161c191690553880806116fd565b8587015188559096019594850194879350908101906116ec565b61174261043d565b611683565b634e487b7160e01b600052600060045260246000fd5b61176561043d565b611620565b503461000e57600036600319011261000e576106c7611787611d3f565b60405191829182610952565b503461000e576117a236611556565b6117ae93919293611c98565b604051906117bb82610454565b6001600160a01b0392831682526020808301958652604083019485526060830191825260808301968752936117f1611602611dd2565b156117f857005b60095495600160401b871015611904575b61181a6001978881016009556103cc565b949094611747575184546001600160a01b0319166001600160a01b03919096161694909417835560049351868401555160028301555160038201550192519081519167ffffffffffffffff83116118f7575b61187a836116918754610403565b81601f84116001146118a757509282939183926000946116c55750501b916000199060031b1c1916179055005b919083601f1981166118be88600052602060002090565b946000905b888383106118dd575050501061170757505050811b019055005b8587015188559096019594850194879350908101906118c3565b6118ff61043d565b61186c565b61190c61043d565b611809565b503461000e57602036600319011261000e5761192b610314565b611933611c98565b6001600160a01b03908116801561198157600080546001600160a01b03198116831782559092167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461000e57604036600319011261000e577fb7ee00edafdb5db3a1b52a5789a6b562eb48268842d113dbfe860b6f86e5f595611a10610314565b602435611a2260026001541415611f78565b6002600155611a32811515611fc4565b611a496000611a426107a2611f67565b1215611fc4565b611b57611a568383612bd1565b92611a6033612657565b611a86611a7e611a6f846131cc565b611a7885613267565b906124f4565b851115611fc4565b611a9281861115611fc4565b611b0d611a9f8386612bd1565b600b546040516370a0823160e01b81523360048201529194916113209188916001600160a01b0391821690602081602481855afa908115611bd6575b600091611bb8575b50808911611ba6575050600b54611b049088906001600160a01b03166112d2565b33908416612148565b611b188582546124f4565b9055611b2333612822565b6040805133815260208101969096528501959095526060840152608083019390935260a082019290925290819060c0820190565b0390a1611b6333612822565b15611b72575b6108ab60018055565b611b99611b8b6108c6611b866002546124e5565b61104e565b6108e4611b866107a2611f67565b611ba161257d565b611b69565b611bb391309033906121a5565b611b04565b611bd0915060203d8111610e4c57610e3e8183610499565b38611ae3565b611bde611fda565b611adb565b503461000e57604036600319011261000e576020610364611c0261032a565b600435612bd1565b503461000e57602036600319011261000e576106c7611c2a6106f8610314565b604051918291602083526020830190610910565b503461000e57602036600319011261000e576040611c62611c5d610314565b612cf5565b82519182526020820152f35b503461000e57600036600319011261000e57600b546040516001600160a01b039091168152602090f35b6000546001600160a01b03163303611cac57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90604051611cfd81610454565b82546001600160a01b03168152600183015460208201526002830154604082015260038301546060820152918290608090611d3a906004016104bb565b910152565b600a549067ffffffffffffffff8211611dc5575b6040519160056020611d6983831b820186610499565b82855280850190600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a86000925b858410611da957505050505050565b8483600192611db785611cf0565b815201920193019290611d9a565b611dcd61043d565b611d53565b6009549067ffffffffffffffff8211611e46575b6040519160056020611dfc83831b820186610499565b8285528085019060096000526000805160206133ce8339815191526000925b858410611e2a57505050505050565b8483600192611e3885611cf0565b815201920193019290611e1b565b611e4e61043d565b611de6565b90601f8111611e6157505050565b600091825260208220906020601f850160051c83019410611e9d575b601f0160051c01915b828110611e9257505050565b818155600101611e86565b9092508290611e7d565b6003549081815260208091019160036000526000805160206133ae833981519152916000905b828210611edb575050505090565b83546001600160a01b031685529384019360019384019390910190611ecd565b60025490818152602080910191600260005260008051602061338e833981519152916000905b828210611f2f575050505090565b83546001600160a01b031685529384019360019384019390910190611f21565b604051906104f982611f6081611ea7565b0383610499565b604051906104f982611f6081611efb565b15611f7f57565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b1561000e57565b9081602091031261000e575190565b506040513d6000823e3d90fd5b6104f990600354600160401b81101561204c575b600181018060035581101561203f575b60036000526000805160206133ae8339815191520180546001600160a01b0319166001600160a01b03909216919091179055565b61204761036c565b61200b565b61205461043d565b611ffb565b6104f990600254600160401b8110156120be575b60018101806002558110156120b1575b600260005260008051602061338e8339815191520180546001600160a01b0319166001600160a01b03909216919091179055565b6120b961036c565b61207d565b6120c661043d565b61206d565b50634e487b7160e01b600052601160045260246000fd5b60019060001981146120f2570190565b6120fa6120cb565b0190565b6040519061210b8261047d565b60078252666c656e6465727360c81b6020830152565b92919060018060a01b0316835260606020840152604061214360608501611efb565b930152565b60405163a9059cbb60e01b60208201526001600160a01b0390921660248301526044808301939093529181526104f9916080820167ffffffffffffffff811183821017612198575b604052612263565b6121a061043d565b612190565b6040516323b872dd60e01b60208201526001600160a01b0392831660248201529290911660448301526064808301939093529181526104f9916121e782610454565b612263565b9081602091031261000e5751801515810361000e5790565b1561220b57565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b6040516001600160a01b03919091169161227c8261047d565b6020928383527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656484840152803b156122f357600082819282876122ce9796519301915af16122c8612338565b90612368565b805190816122db57505050565b826104f9936122ee9383010191016121ec565b612204565b60405162461bcd60e51b815260048101859052601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b3d15612363573d9061234982610e60565b916123576040519384610499565b82523d6000602084013e565b606090565b90919015612374575090565b8151156123845750805190602001fd5b60405162461bcd60e51b8152602060048201529081906123a8906024830190610584565b0390fd5b60209181518110156123c1575b60051b010190565b6123c961036c565b6123b9565b91909182516123e3575b506000915060001990565b60005b8351811015612423576001600160a01b038061240283876123ac565b51169083161461241a57612415906120e2565b6123e6565b92505060019190565b5050905080386123d8565b1561243557565b60405162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a102a37b5b2b760711b6044820152606490fd5b6040519061247c8261047d565b6009825268626f72726f7765727360b81b6020830152565b9695949392919060018060a01b031687526020870152604086015215156060850152608084015260e060a084015260c061214360e08501611ea7565b919082018092116124dd57565b6104f96120cb565b6000198101919082116124dd57565b919082039182116124dd57565b6003548015612567577fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85a6000198201918083101561255a575b6003600052016bffffffffffffffffffffffff60a01b8154169055600355565b61256261036c565b61253a565b634e487b7160e01b600052603160045260246000fd5b6002548015612567577f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acd600019820191808310156125d6575b6002600052016bffffffffffffffffffffffff60a01b8154169055600255565b6125de61036c565b6125b6565b919260a0936105d99592600180871b0316845260208401526040830152606082015281608082015201611ea7565b60005b825181101561264e576001600160a01b038061263083866123ac565b51169083161461264857612643906120e2565b612614565b91505090565b50505060001990565b6126608161277a565b90811561269457612670906126b6565b905b80821061268d5781039081116126855790565b6105d96120cb565b5050600090565b61269d90612822565b90612672565b818102929181159184041417156124dd57565b600c54600091825b8281106126cb5750505090565b60008181526006602090815260408083206001600160a01b0386811685529083529281902054909216918261270c575b505050612707906120e2565b6126be565b82670de0b6b3a7640000926108206127538361274d8a612759976127079b9e9a600052600487526000209060018060a01b0316600052602052604060002090565b54612bd1565b92612924565b04810180911161276d575b939038806126fb565b6127756120cb565b612764565b600d54600091825b82811061278f5750505090565b60008181526007602090815260408083206001600160a01b03868116855290835292819020549092169190826127d1575b5050506127cc906120e2565b612782565b600083815260059091529081206001600160a01b03851682526020526040902091946127cc9290916128029161274d565b8101809111612815575b939038806127c0565b61281d6120cb565b61280c565b600c54600091825b8281106128375750505090565b60008181526006602090815260408083206001600160a01b0386811685529252909120548116612871575b5061286c906120e2565b61282a565b936128d8856128b6856107d5869961289a836107d561286c9a6000526006602052604060002090565b54166001600160a01b0316600090815260046020526040902090565b54906128d0866107d58a6000526006602052604060002090565b541690612bd1565b81018091116128e9575b9390612862565b6128f16120cb565b6128e2565b6040519061290382610454565b60606080836000815260006020820152600060408201526000838201520152565b61292c6128f6565b506129356128f6565b600a54909160005b82811061294b575b50505090565b61295481610383565b50546001600160a01b0383811691161461297657612971906120e2565b61293d565b905061298d92506129879150610383565b50611cf0565b388080612945565b9060008080600254905b818110612a73575b505060035460005b8181106129c4575b50506105d99293506124f4565b6129d06108c68261101b565b6001600160a01b038781169116146129f0576129eb906120e2565b6129af565b50506000600a545b808210156129b7579092612a67612a6d91612a61612a1861298788610383565b8051612a5b90612a4c908c906107d5906001600160a01b03165b6001600160a01b0316600090815260056020526040902090565b5491516001600160a01b031690565b90612bd1565b906124d0565b936120e2565b906129f8565b612a7f6108c68261104e565b6001600160a01b03878116911614612a9f57612a9a906120e2565b61299f565b505060006009545b808210156129a7579091612b28612b2e91612a61612b1a612aca612987886103cc565b6020612b11612b008d6107d5612ae6865160018060a01b031690565b6001600160a01b0316600090815260046020526040902090565b5483516001600160a01b0316612a5b565b910151906126a3565b670de0b6b3a7640000900490565b926120e2565b90612aa7565b8151612b41575050600090565b60005b8251811015612b81576001600160a01b0380612b6083866123ac565b51511690831614612b7957612b74906120e2565b612b44565b505050600190565b505050388061268d565b8151612b98575050600090565b60005b8251811015612b81576001600160a01b0380612bb783866123ac565b5151169083511614612b7957612bcc906120e2565b612b9b565b90612bde612be491612cf5565b926126a3565b90604d8111612c12575b600a0a908115612bfc570490565b634e487b7160e01b600052601260045260246000fd5b612c1a6120cb565b612bee565b60405190612c2c8261047d565b600e82526d03a37b5b2b720b2323932b9b99d160951b6020830152565b60405190612c568261047d565b600c82526b03a37b5b2b72a37aab9b21d160a51b6020830152565b60405190612c7e8261047d565b60068252652d2d2d2d2d2d60d01b6020830152565b519069ffffffffffffffffffff8216820361000e57565b908160a091031261000e57612cbe81612c93565b916020820151916040810151916105d9608060608401519301612c93565b9081602091031261000e575160ff8116810361000e5790565b90600491612d36612d28612d1b8360018060a01b03166000526008602052604060002090565b546001600160a01b031690565b91612d31612c1f565b61333f565b612d4281612d31612c49565b612d52612d4d612c71565b6132e8565b604051633fabe5a360e21b8152906001600160a01b031660a0828581845afa918215612e28575b600092612df0575b506020906040519485809263313ce56760e01b82525afa928315612de3575b600093612db0575b509160ff1690565b60ff919350612dd59060203d8111612ddc575b612dcd8183610499565b810190612cdc565b9290612da8565b503d612dc3565b612deb611fda565b612da0565b6020919250612e159060a03d8111612e21575b612e0d8183610499565b810190612caa565b50505090509190612d81565b503d612e03565b612e30611fda565b612d79565b906120fa60209282815194859201610561565b60405190612e558261047d565b600e82526d1d1bdad95b9cd09bdc9c9bddd95960921b6020830152565b60405190612e7f8261047d565b600a8252691d1bdad95b9cd3195b9d60b21b6020830152565b919092604051906020820182612eae8284612e35565b0392612ec2601f1994858101835282610499565b519020604051666c656e6465727360c81b6020820190815290612ef081602781015b03868101835282610499565b51902003612f865750506108c6612f069161104e565b600c54612f1c612f14612e72565b82858561305f565b15612f5457506001600160a01b039091166000908152600460205260409020612f5091612f48916107d5565b9182546124d0565b9055565b82612ae6612f8394610e01856107d586612f7361138e6107d5996120e2565b6000526006602052604060002090565b55565b604051612fa781612f9b602082018095612e35565b03848101835282610499565b51902090604051612fdd602082019282612fd18560099068626f72726f7765727360b81b81520190565b03908101835282610499565b51902014612fea57505050565b6108c6612ff69161101b565b600d54613004612f14612e48565b1561303057506001600160a01b039091166000908152600560205260409020612f5091612f48916107d5565b82612a32612f8394610e01856107d58661304f610de76107d5996120e2565b6000526007602052604060002090565b92909161306f575b505050600090565b6040519060208201826130828284612e35565b0392613096601f1994858101835282610499565b519020604051691d1bdad95b9cd3195b9d60b21b60208201908152906130bf81602a8101612ee4565b51902003613128575050600c549160005b8381106130e457505050505b388080613067565b6130ff612d1b836107d5846000526006602052604060002090565b6001600160a01b0384811691161461311f5761311a906120e2565b6130d0565b50505050600190565b60405161313d81612f9b602082018095612e35565b5190209060405161316c602082019282612fd185600e906d1d1bdad95b9cd09bdc9c9bddd95960921b81520190565b5190201461317c575b50506130dc565b600d549160005b838110613191575050613175565b6131ac612d1b836107d5846000526007602052604060002090565b6001600160a01b0384811691161461311f576131c7906120e2565b613183565b9060006002805490816131e1575b5090925050565b9082939492915b8183106131f95750849392506131da565b6001600160a01b03808516600090815260046020908152604080832060008051602061338e83398151915288015490941683529290522093959492939192909161324f91905b54810180911161325a57936120e2565b9190949293946131e8565b6132626120cb565b612a67565b90600060038054908161327b575090925050565b9082939492915b8183106132935750849392506131da565b6001600160a01b0380851660009081526005602090815260408083206000805160206133ae8339815191528801549094168352929052209395949293919290916132dd919061323f565b919094929394613282565b6133166133246104f99260405192839163104c13eb60e21b6020840152602060248401526044830190610584565b03601f198101835282610499565b600080916020815191016a636f6e736f6c652e6c6f675afa50565b61332461336e916104f99360405193849263319af33360e01b6020850152604060248501526064840190610584565b6001600160a01b0391909116604483015203601f19810183528261049956fe405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acec2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7afa264697066735822122015cd5b050372e25754edea572f695642e90adeaf9515f6aad6e9a9686426928864736f6c63430008110033";

type ZLendConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZLendConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZLend__factory extends ContractFactory {
  constructor(...args: ZLendConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZLend> {
    return super.deploy(_token, overrides || {}) as Promise<ZLend>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): ZLend {
    return super.attach(address) as ZLend;
  }
  override connect(signer: Signer): ZLend__factory {
    return super.connect(signer) as ZLend__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZLendInterface {
    return new utils.Interface(_abi) as ZLendInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ZLend {
    return new Contract(address, _abi, signerOrProvider) as ZLend;
  }
}
