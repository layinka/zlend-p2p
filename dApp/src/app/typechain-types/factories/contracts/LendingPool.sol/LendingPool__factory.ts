/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LendingPool,
  LendingPoolInterface,
} from "../../../contracts/LendingPool.sol/LendingPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "lend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "repay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60808060405260408161071b803803809161001a82856100f1565b8339810103126100ec5780516001600160a01b038116908190036100ec57602091820151606460028190556082600355600080546001600160a01b031916841781556040516323b872dd60e01b81523360048201523060248201526044810193909352939192839190829086905af180156100e1576100a3575b6040516105f0908161012b8239f35b6020813d82116100d9575b816100bb602093836100f1565b810103126100d55751801515036100d25780610094565b80fd5b5080fd5b3d91506100ae565b6040513d84823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761011457604052565b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c9081633ccfd60b1461034557508063402d88831461020f578063a6aa57ce1461013a5763c5ebeaec1461004f57600080fd5b34610136576020806003193601126101325780826100d09335906100748215156104bf565b33875260098352818688205542600187892001556100948260015461057a565b6001558654865163a9059cbb60e01b8152339281019283526020830193909352919485926001600160a01b031691839189918391604090910190565b03925af1918215610125576008926100f8575b50338452528120805460ff1916600117905580f35b61011790823d841161011e575b61010f8183610502565b81019061053a565b50386100e3565b503d610105565b50505051903d90823e3d90fd5b8380fd5b8280fd5b5034610136576020806003193601126101325761019f81833580946101608215156104bf565b875487516323b872dd60e01b8152339281019283523060208401526040830193909352919384926001600160a01b03169183918a918391606090910190565b03925af1801561020557916007916101e295936101e8575b503386526005815283838720554260018488200155528320600160ff19825416179055600154610557565b60015580f35b6101fe90823d841161011e5761010f8183610502565b50386101b7565b84513d87823e3d90fd5b503461013657826003193601126101365733835260206008815260ff838520541615610314573384526009815282842061025b610252600183549301544261057a565b60035490610587565b670de0b6b3a764000090818102918183041490151715610301576102998261029361028a86946102a696610587565b6001549061059a565b90610557565b80946101608215156104bf565b03925af1801561020557916008916101e295936102e4575b5033865260098152856001848220828155015552832060ff198154169055600154610557565b6102fa90823d841161011e5761010f8183610502565b50386102be565b634e487b7160e01b865260118452602486fd5b606492519162461bcd60e51b8352820152600e60248201526d3737ba1030903137b93937bbb2b960911b6044820152fd5b92919050346101325783600319360112610132573384526020926007845260ff83862054161561048957503384526005835281842061039661038d600183549301544261057a565b60025490610587565b670de0b6b3a76400009081810291818304149015171561047657916103c78261029361028a61043c97968996610587565b906103d38215156104bf565b3387526005835286600185822082815501556007835283872060ff1981541690556104008260015461057a565b6001558654845163a9059cbb60e01b8152339281019283526020830193909352919485926001600160a01b031691839189918391604090910190565b03925af190811561046d5750610450578280f35b8161046692903d1061011e5761010f8183610502565b5038808280f35b513d85823e3d90fd5b634e487b7160e01b865260118352602486fd5b8360649262461bcd60e51b835282015260146024820152733cb7ba9030b932903737ba1030903632b73232b960611b6044820152fd5b156104c657565b60405162461bcd60e51b8152602060048201526014602482015273020616d6f756e742063616e206e6f7420626520360641b6044820152606490fd5b90601f8019910116810190811067ffffffffffffffff82111761052457604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610552575180151581036105525790565b600080fd5b9190820180921161056457565b634e487b7160e01b600052601160045260246000fd5b9190820391821161056457565b8181029291811591840414171561056457565b81156105a4570490565b634e487b7160e01b600052601260045260246000fdfea2646970667358221220adffe4a9c40331939ea58814392ef99c67eb0f9c37b0b536461c625ce9b9ce5664736f6c63430008110033";

type LendingPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LendingPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LendingPool__factory extends ContractFactory {
  constructor(...args: LendingPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tokenAddress: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<LendingPool> {
    return super.deploy(
      _tokenAddress,
      _amount,
      overrides || {}
    ) as Promise<LendingPool>;
  }
  override getDeployTransaction(
    _tokenAddress: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_tokenAddress, _amount, overrides || {});
  }
  override attach(address: string): LendingPool {
    return super.attach(address) as LendingPool;
  }
  override connect(signer: Signer): LendingPool__factory {
    return super.connect(signer) as LendingPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendingPoolInterface {
    return new utils.Interface(_abi) as LendingPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LendingPool {
    return new Contract(address, _abi, signerOrProvider) as LendingPool;
  }
}
