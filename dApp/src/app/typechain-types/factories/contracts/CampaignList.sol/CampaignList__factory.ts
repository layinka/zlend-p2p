/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CampaignList,
  CampaignListInterface,
} from "../../../contracts/CampaignList.sol/CampaignList";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DexLockerFactory",
        name: "dexLockerFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "zsalesToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "zsalesNFTToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "campaignImplementationAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "createdCampaignAddress",
        type: "address",
      },
    ],
    name: "CampaignCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_tokenCampaigns",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "allOwnersCampaigns",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "campaignAt",
    outputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignCreationPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_purchaseTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256[10]",
        name: "capAndDate",
        type: "uint256[10]",
      },
      {
        internalType: "enum Campaign.RefundType",
        name: "_refundType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_dexRouterAddress",
        type: "address",
      },
      {
        internalType: "uint256[4]",
        name: "liquidityAllocationAndRates",
        type: "uint256[4]",
      },
      {
        internalType: "string[6]",
        name: "founderInfo",
        type: "string[6]",
      },
      {
        internalType: "bool[2]",
        name: "_useTokenOrRaisedFundsVesting",
        type: "bool[2]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "releaseDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "releaseAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasBeenClaimed",
            type: "bool",
          },
        ],
        internalType: "struct VestSchedule[8]",
        name: "teamTokenVestingDetails",
        type: "tuple[8]",
      },
      {
        internalType: "uint256[3]",
        name: "raisedFundVestingDetails",
        type: "uint256[3]",
      },
    ],
    name: "createNewCampaign",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tier",
        type: "uint256",
      },
    ],
    name: "getTierStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "hasExistingCampaign",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setCampaignCreationPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "saleTokenFee",
        type: "uint256",
      },
    ],
    name: "setCampaignFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "campaignImplementationAddress",
        type: "address",
      },
    ],
    name: "setCampaignImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "salesWalletAddress",
        type: "address",
      },
    ],
    name: "setFeeWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tier",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setTierStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "setZSalesNFTTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "setZSalesTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "campaignAddress",
        type: "address",
      },
    ],
    name: "transferTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
    ],
    name: "tryGetCampaignByKey",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "tryGetCampaignByTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zsaleFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zsaleTokenFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zsalesNFTTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zsalesTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zsalesWalletAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080346200018a576001600160401b0390601f62001b8838819003918201601f1916830191848311848410176200018f578084926080946040528339810103126200018a5780516001600160a01b039190828116908190036200018a576200006a60208301620001a5565b936200008760606200007f60408601620001a5565b9401620001a5565b91846000948554948260018060a01b031999338b891617895560405197823391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08b80a360c860075560c86008556509184e72a00060095573b7e16f5fa9941b84bacd1601f277b00911aed3398b600a541617600a55818b600b5416938c600c5416978d6005541617600555168b60105416176010551617600b551617600c5560e18083019183831090831117620001765790829162001aa78339039082f09081156200016a5750169060065416176006556040516118ec9081620001bb8239f35b604051903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200018a5756fe608080604052600436101561001357600080fd5b600090813560e01c90816304e2ee4e14611437575080630c89a0df1461116e5780630ce12eb9146111505780631867ee84146110cb5780631b743d0a146110a25780631ebb4fdc1461105d57806339fca7de1461101d5780633c3d5b6714610eff5780633f5aecfd14610ede578063555d9bf914610ec057806357bbb8d414610e805780636727269a14610e51578063715018a614610df75780638da5cb5b14610dd057806390d49b9d14610d9057806391d6823914610d7257806394722d4214610d325780639ef0574814610cfc5780639f95761614610325578063aa2bd88214610307578063b4e64fa6146102cb578063c1ffec9c146102cb578063c34052e01461029c578063df0559ce14610273578063f2fde38b146101ad578063f4ef1c061461018a5763f56dc2d61461014a57600080fd5b34610187576020366003190112610187576020906001600160a01b03906040908261017361146d565b168152600f84522054161515604051908152f35b80fd5b5034610187576020366003190112610187576101a461151e565b60043560095580f35b5034610187576020366003190112610187576101c761146d565b6101cf61151e565b6001600160a01b0390811690811561021f57600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b5034610187578060031936011261018757600b546040516001600160a01b039091168152602090f35b503461018757602036600319011261018757600435600052600260205260206040600020541515604051908152f35b5034610187576020366003190112610187576020906001600160a01b0390604090826102f561146d565b168152600f8452205416604051908152f35b50346101875780600319360112610187576020600754604051908152f35b506106003660031901126101875761033b61146d565b602435906001600160a01b0382168203610bc75736606312156107e6576040519161014083018381106001600160401b038211176108ff576040528261018493368511610bc7576044905b858210610cec575050600284351015610ce8576101a435906001600160a01b0382168203610bc757366101e31215610ce457604051916103c5836114ac565b8261024493368511610bc7576101c4905b858210610cd45750506001600160401b03843511610c49573660238535011215610c49576040519360c085018581106001600160401b038211176108ff5760405284903660c482350111610bcc57898135600401925b60c48335018410610c4d5750505050366102831215610c4957604051610451816114c7565b6102a49181368411610c4557610264905b848210610c2d575050366102c31215610bcc576040519261010084018481106001600160401b038211176108ff576040528390366105a411610c2957905b6105a48210610bd0575050366105c31215610bcc57604051938460608101106001600160401b036060870111176108ff576060850160405261060485368211610bc7576105a4905b828210610bb7575050506009543410610b5957600654604051631627905560e01b81526001600160a01b038b81166004830152909160209183916024918391165afa908115610a7d578c91610b2a575b5015610ac6576001600160a01b038981168c52600f60205260408c205416610953575b6004805460010190819055610120870152601054604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b815260609190911b6bffffffffffffffffffffffff191660148201526e5af43d82803e903d91602b57fd5bf360881b60288201526001600160a01b03906037908df016998a1561091557604051988960808101106001600160401b0360808c0111176108ff5760808a016040908152338b523060208c01526001600160a01b038c8116918c019190915290811660608b015260055416968b3b156108fb576040516346db6d1760e11b81528d9a90999897969594939291908b60048c015b600482106108c65750505060848a018b905b600a82106108ac57505050356101c48901526001600160a01b03166101e48801528761020488015b6004821061089257505050610284860187905b60028210610876575050506102c4850186905b60088210610841575050506105c4840185905b60038210610827575050610660610624850152506107248301916106648401855b600681106107f5575050508284928192610644830152038183885af180156107ea576107d2575b505061071e60045480855260036020528360408620556115fe565b50338352600d6020526040832060045490805490600160401b8210156107be579061074e916001820181556115e6565b819291549060031b600019811b9283911b1691191617905560018060a01b03168252600f60205260408220816001600160601b0360a01b825416179055600454906040519081527fa01c8e2b0a81830c2e4e199b4cb98ece9d41443b7f9ef51cbb778f0fa13b019d60203392a380f35b634e487b7160e01b86526041600452602486fd5b6107db90611499565b6107e6578238610703565b8280fd5b6040513d84823e3d90fd5b919495509192602080610815600193610663198a820301875288516115a6565b960193019101908895949392916106dc565b8251815289965060209283019260019290920191016106bb565b825180518252602081810151838201526040918201511515918301919091528b985090920191600191909101906060016106a8565b8251151581528b98506020928301926001929092019101610695565b825181528c99506020928301926001929092019101610682565b825181528f9c50602092830192600192909201910161065a565b60019192939495969798999a9b9c9d5060208091838060a01b03865116815201930191018f9c9b9a9998979695949392610648565b8c80fd5b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606490fd5b6040808c20549051631006976960e11b81526001600160a01b0390911690602081600481855afa908115610abb578d91610a9c575b506005811015610a88576002149081156109fe575b5061055b5760405162461bcd60e51b815260206004820152602e60248201527f43616d706169676e466163746f72793a20546865726520697320616e2045786960448201526d39ba34b7339021b0b6b830b4b3b760911b6064820152608490fd5b604051631006976960e11b81529150602090829060049082905afa908115610a7d578c91610a4e575b506005811015610a3a576003143861099d565b634e487b7160e01b8c52602160045260248cfd5b610a70915060203d602011610a76575b610a6881836114e2565b81019061158e565b38610a27565b503d610a5e565b6040513d8e823e3d90fd5b634e487b7160e01b8d52602160045260248dfd5b610ab5915060203d602011610a7657610a6881836114e2565b38610988565b6040513d8f823e3d90fd5b60405162461bcd60e51b815260206004820152603660248201527f43616d706169676e466163746f72793a20526571756972657320546f6b656e41604482015275032323932b9b9903a379031329031b7b73a3930b1ba160551b6064820152608490fd5b610b4c915060203d602011610b52575b610b4481836114e2565b810190611576565b38610538565b503d610b3a565b60405162461bcd60e51b815260206004820152603060248201527f43616d706169676e466163746f72793a2052657175697265732043616d70616960448201526f676e4372656174696f6e20507269636560801b6064820152608490fd5b81358152602091820191016104e8565b600080fd5b8980fd5b606082360312610c29576040518060608101106001600160401b036060830111176108ff57606091828201604052833582526020918285013583820152610c1960408601611460565b60408201528152019101906104a0565b8b80fd5b60208091610c3a84611460565b815201910190610462565b8a80fd5b8780fd5b8335906001600160401b0382116107e657366023838635010112156107e657610c7c6004838635010135611503565b610c8960405191826114e2565b84358301600481013580835236910160240111610cd05760209384938490600490883581018083013590602401868501378835010135830101528152019201918a9061042c565b8380fd5b81358152602091820191016103d6565b8580fd5b8480fd5b8135815260209182019101610386565b5034610187576020366003190112610187576040610d1b600435611886565b825191151582526001600160a01b03166020820152f35b503461018757602036600319011261018757610d4c61146d565b610d5461151e565b60018060a01b03166001600160601b0360a01b600b541617600b5580f35b50346101875780600319360112610187576020600154604051908152f35b503461018757602036600319011261018757610daa61146d565b610db261151e565b60018060a01b03166001600160601b0360a01b600a541617600a5580f35b5034610187578060031936011261018757546040516001600160a01b039091168152602090f35b5034610187578060031936011261018757610e1061151e565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101875760203660031901126101875760ff60406020926004358152600e84522054166040519015158152f35b503461018757602036600319011261018757610e9a61146d565b610ea261151e565b60018060a01b03166001600160601b0360a01b600c541617600c5580f35b50346101875780600319360112610187576020600854604051908152f35b503461018757610eed36611483565b90610ef661151e565b60075560085580f35b503461018757610f0e36611483565b9190610f1983611696565b610f2660405191826114e2565b838152610f3284611696565b6020919082820190601f1901368237835b610f4d87866116ad565b811015610fda57338652600d8452610f6881604088206115e6565b905486830391838311610fc6578551831015610fb25760031b1c60059190911b84018501526000198114610f9e57600101610f43565b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b89526032600452602489fd5b634e487b7160e01b89526011600452602489fd5b509192509260405193838594850191818652518092526040850193925b82811061100657505050500390f35b835185528695509381019392810192600101610ff7565b50346101875760203660031901126101875761103761146d565b61103f61151e565b60018060a01b03166001600160601b0360a01b601054161760105580f35b503461018757604036600319011261018757602435801515809103610bc75761108461151e565b6004358252600e602052604082209060ff8019835416911617905580f35b5034610187578060031936011261018757600a546040516001600160a01b039091168152602090f35b5034610187576020366003190112610187576004359060015482101561113a5760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690910154808252600360209081526040928390205483519283526001600160a01b031690820152f35b634e487b7160e01b600052603260045260246000fd5b50346101875780600319360112610187576020600954604051908152f35b50346101875760209081600319360112610187576004356001600160a01b03818116918290036107e657604051638da5cb5b60e01b81528481600481865afa9081156113b957849161141a575b5081339116036113c45760405163a69f631160e01b81528481600481865afa9081156113b957849161138c575b5060085460405163bf0a07bd60e01b8152929061271090048684600481885afa93841561133e57869461135d575b50838102938185041490151715611349576040516313aedd4b60e31b81528681600481885afa90811561133e579061125992918791611311575b501692826116ad565b604051906323b872dd60e01b8783015233602483015230604483015260648201526064815260a081018181106001600160401b038211176107be57916112a96112d69492879894604052836116ef565b6040519263a9059cbb60e01b908401528460248401526044830152604482526112d1826114ac565b6116ef565b803b1561130e578190600460405180948193633e27f40d60e21b83525af180156107ea57611302575080f35b61130b90611499565b80f35b50fd5b6113319150883d8a11611337575b61132981836114e2565b8101906116d0565b38611250565b503d61131f565b6040513d88823e3d90fd5b634e487b7160e01b85526011600452602485fd5b9093508681813d8311611385575b61137581836114e2565b81010312610ce457519238611216565b503d61136b565b90508481813d83116113b2575b6113a381836114e2565b81010312610cd05751386111e8565b503d611399565b6040513d86823e3d90fd5b60405162461bcd60e51b815260048101859052602860248201527f43414d504149474e4c6973743a205472616e7366657220746f6b656e202d204e60448201526737ba1027bbb732b960c11b6064820152608490fd5b6114319150853d87116113375761132981836114e2565b386111bb565b90503461145c578160031936011261145c57600c546001600160a01b03168152602090f35b5080fd5b35908115158203610bc757565b600435906001600160a01b0382168203610bc757565b6040906003190112610bc7576004359060243590565b6001600160401b0381116108ff57604052565b608081019081106001600160401b038211176108ff57604052565b604081019081106001600160401b038211176108ff57604052565b90601f801991011681019081106001600160401b038211176108ff57604052565b6001600160401b0381116108ff57601f01601f191660200190565b6000546001600160a01b0316330361153257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90816020910312610bc757518015158103610bc75790565b90816020910312610bc757516005811015610bc75790565b919082519283825260005b8481106115d2575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016115b1565b805482101561113a5760005260206000200190600090565b60008181526002602052604081205461169157600154600160401b81101561167d5760018101806001558110156116695790826040927fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6015560015492815260026020522055600190565b634e487b7160e01b82526032600452602482fd5b634e487b7160e01b82526041600452602482fd5b905090565b6001600160401b0381116108ff5760051b60200190565b919082018092116116ba57565b634e487b7160e01b600052601160045260246000fd5b90816020910312610bc757516001600160a01b0381168103610bc75790565b6040516001600160a01b039190911691611708826114c7565b6020928383527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656484840152803b156117fd57600082819282876117799796519301915af13d156117f5573d9061175d82611503565b9161176b60405193846114e2565b82523d60008684013e611842565b8051908161178657505050565b8280611796938301019101611576565b1561179e5750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b606090611842565b60405162461bcd60e51b815260048101859052601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b9091901561184e575090565b81511561185e5750805190602001fd5b60405162461bcd60e51b8152602060048201529081906118829060248301906115a6565b0390fd5b600052600360205260406000205480156000146118b157506002602052604060002054151590600090565b60019156fea26469706673582212208d765275ab0259e3fb4043a598042ef30bcc70f9dea469579f75347e4ebfbf3664736f6c63430008110033608080604052346100155760c6908161001b8239f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c631627905514602857600080fd5b34608c576020366003190112608c576004356001600160a01b0381168103608857602092503f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708114159081607f575b5015158152f35b90501515386078565b8280fd5b5080fdfea26469706673582212203b4716df6018ce13005c6223388e8d1bc8dc697389b8d5ae5a9ffae614dc7de764736f6c63430008110033";

type CampaignListConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignListConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CampaignList__factory extends ContractFactory {
  constructor(...args: CampaignListConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    dexLockerFactory: PromiseOrValue<string>,
    zsalesToken: PromiseOrValue<string>,
    zsalesNFTToken: PromiseOrValue<string>,
    campaignImplementationAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CampaignList> {
    return super.deploy(
      dexLockerFactory,
      zsalesToken,
      zsalesNFTToken,
      campaignImplementationAddress,
      overrides || {}
    ) as Promise<CampaignList>;
  }
  override getDeployTransaction(
    dexLockerFactory: PromiseOrValue<string>,
    zsalesToken: PromiseOrValue<string>,
    zsalesNFTToken: PromiseOrValue<string>,
    campaignImplementationAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      dexLockerFactory,
      zsalesToken,
      zsalesNFTToken,
      campaignImplementationAddress,
      overrides || {}
    );
  }
  override attach(address: string): CampaignList {
    return super.attach(address) as CampaignList;
  }
  override connect(signer: Signer): CampaignList__factory {
    return super.connect(signer) as CampaignList__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignListInterface {
    return new utils.Interface(_abi) as CampaignListInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CampaignList {
    return new Contract(address, _abi, signerOrProvider) as CampaignList;
  }
}
