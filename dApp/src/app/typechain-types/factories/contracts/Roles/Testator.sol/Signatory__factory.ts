/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Signatory,
  SignatoryInterface,
} from "../../../../contracts/Roles/Testator.sol/Signatory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NoSignatoriesProvided",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "SignatoryProfileEnabledShouldBe",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "VaultParametersExpired",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "signatories",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDiggingFees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "createVaultProtocolFees",
        type: "uint256",
      },
    ],
    name: "VaultCreated",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            components: [
              {
                internalType: "address",
                name: "beneficiaryAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "percent",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
            ],
            internalType: "struct LibTypes.BeneficiaryDetails[]",
            name: "beneficiaries",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct LibTypes.CreateVaultData",
        name: "vaultData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "signatoryAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "diggingFee",
            type: "uint256",
          },
        ],
        internalType: "struct LibTypes.SelectedSignatoryData[]",
        name: "selectedSignatories",
        type: "tuple[]",
      },
    ],
    name: "createVault",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type SignatoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignatoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Signatory__factory extends ContractFactory {
  constructor(...args: SignatoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Signatory> {
    return super.deploy(overrides || {}) as Promise<Signatory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Signatory {
    return super.attach(address) as Signatory;
  }
  override connect(signer: Signer): Signatory__factory {
    return super.connect(signer) as Signatory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatoryInterface {
    return new utils.Interface(_abi) as SignatoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Signatory {
    return new Contract(address, _abi, signerOrProvider) as Signatory;
  }
}
