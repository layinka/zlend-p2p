/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Signatory,
  SignatoryInterface,
} from "../../../contracts/Roles/Signatory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "freeBond",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NotEnoughFreeBond",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "SignatoryProfileEnabledShouldBe",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signatory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositedBond",
        type: "uint256",
      },
    ],
    name: "DepositFreeBond",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "arweaveTxId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldSignatory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newSignatory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "curseTokenId",
        type: "uint256",
      },
    ],
    name: "FinalizeTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "unencryptedShard",
        type: "bytes",
      },
    ],
    name: "ReleaseAssets",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signatory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minimumDiggingFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "freeBond",
        type: "uint256",
      },
    ],
    name: "SignatoryRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signatory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "peerId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minimumDiggingFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maximumRewrapInterval",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "freeBond",
        type: "uint256",
      },
    ],
    name: "SignatoryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signatory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawnBond",
        type: "uint256",
      },
    ],
    name: "WithdrewFreeBond",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signatory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawnReward",
        type: "uint256",
      },
    ],
    name: "WithdrewReward",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositFreeBond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signatory",
        type: "address",
      },
    ],
    name: "getSignatoryProfile",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "minimumSignatoryFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "freeBond",
            type: "uint256",
          },
        ],
        internalType: "struct LibTypes.SignatoryProfile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getSignatoryProfileAddressAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSignatoryProfileAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "minimumSignatoryFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "freeBond",
        type: "uint256",
      },
    ],
    name: "registerSignatory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFreeBond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461001657610a96908161001c8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600090813560e01c8063364e0801146108005780636a5ac74c14610714578063938cf624146106de578063c120227114610619578063c885bc5814610557578063d611e1d1146103cf5763f2ee3dcd1461006e57600080fd5b346103cb5760603660031901126103cb5767ffffffffffffffff9083358281116103c757366023820112156103c75780850135928084116103b457825191602092601f19956100c48588601f840116018361094a565b808252602492368483830101116103b05781899285889301838601378301015233600090815260066020526040902060443596600194909160ff90860154166103945790899493929187519261011984610918565b8352868301918583528a888b8b8088019a89358c52606089019e8f528261030c575b5050505050338b5260068852888b20935180519283116102fa579082916101628654610989565b601f81116102a5575b508991601f841160011461024957508c9261023e575b5050600019600383901b1c191690851b1782555b8382019051151560ff801983541691161790558351600282015560038751910155600554976801000000000000000089101561022d575050866101ff917f4bc537ae8f9828b15dfb3fac21ff38495dcc0356ccbf7d74efc1e31b2ddc379c969798016005556109c3565b81549060031b9060018060a01b03821b809233901b169119161790555193519082519485528401523392a280f35b634e487b7160e01b88526041905286fd5b015190503880610181565b908d92918995168784528b8420935b8c82821061028f5750508411610276575b505050811b018255610195565b015160001960f88460031b161c19169055388080610269565b8385015186558b97909501949384019301610258565b90919250858d52898d20601f850160051c8101918b86106102f0575b8e8695949392601f8c930160051c0192905b8382106102e25750505061016b565b81558695508a91018f6102d3565b90915081906102c1565b634e487b7160e01b8c5260418d52858cfd5b845491516323b872dd60e01b815233918101918252306020830152604082019390935291938492839003606001918391906001600160a01b03165af1801561038a5761035d575b888c918b8f61013b565b61037c90893d8b11610383575b610374818361094a565b81019061096c565b5038610353565b503d61036a565b8a513d8e823e3d90fd5b8651633e4dfa9160e21b8152808b018a90523381860152604490fd5b8880fd5b634e487b7160e01b855260418652602485fd5b8380fd5b5080fd5b5091903461055457602091826003193601126103cb57356001600160a01b038116908190036103cb57816060855161040681610918565b81815282868201528287820152015281526006825282812083519361042a85610918565b80518254908461043983610989565b8083526001938885821691826000146105355750506001146104f9575b509061046c8160ff94939997989699038261094a565b855286015416948284019515158652600360028201549183860192835201549160608501928352805196879585875251966080868801528751958660a0890152815b8781106104e257505060c0809850868801015251151590850152516060840152516080830152601f80199101168101030190f35b808a018201518b820160c001528a985081016104ae565b87939291508587528387209087915b8183106105205750929391925082010161046c610456565b80548484018701528995909201918401610508565b60ff19168186015291151560051b8401909101915061046c9050610456565b80fd5b5082903461061557826003193601126106155733808452600a60209081528285208054908690558554845163a9059cbb60e01b815295860193845283830182905290949283916001600160a01b03169082908890829060400103925af1801561060b576105ed575b50519081527f55d2cbcb9b4af4f0710706bed8e632991e9d0b68560d5ffcc154d71077b9134660203392a280f35b6106049060203d811161038357610374818361094a565b50836105bf565b82513d86823e3d90fd5b8280fd5b5090346105545780600319360112610554579080519182906005549182855260208095018093600584527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090845b8181106106c1575050508161067d91038261094a565b83519485948186019282875251809352850193925b8281106106a157505050500390f35b83516001600160a01b031685528695509381019392810192600101610692565b82546001600160a01b031684529288019260019283019201610667565b50903461055457602036600319011261055457506106fe602092356109c3565b905491519160018060a01b039160031b1c168152f35b508290346106155760203660031901126106155781359161073433610a10565b3360009081526006602052604090206003018054908482018092116107ed5755835482516323b872dd60e01b815233928101928352306020808501919091526040840186905290929091839182900360600190829088906001600160a01b03165af1801561060b576107cf575b50519081527ff882a0847c57aefe6f6c7df2098dd0afd122eb0e886199e223651b8e45fda82360203392a280f35b6107e69060203d811161038357610374818361094a565b50836107a1565b634e487b7160e01b865260118352602486fd5b508290346106155760203660031901126106155781359161082033610a10565b3360009081526006602052604090206003015483116108e9573360009081526006602052604090206003018054908482039182116107ed57558354825163a9059cbb60e01b815233928101928352602080840186905290929091839182900360400190829088906001600160a01b03165af1801561060b576108cb575b50519081527f7a32983b57ff5fe1af61bb425dcda20a15163ecd191bb4d785319164650aa19c60203392a280f35b6108e29060203d811161038357610374818361094a565b508361089d565b336000908152600660205260409020604492849160030154905163a4e3bead60e01b8152928301526024820152fd5b6080810190811067ffffffffffffffff82111761093457604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761093457604052565b90816020910312610984575180151581036109845790565b600080fd5b90600182811c921680156109b9575b60208310146109a357565b634e487b7160e01b600052602260045260246000fd5b91607f1691610998565b6005548110156109fa5760056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190600090565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03811660009081526006602052604090206001015460ff1615610a375750565b604051633e4dfa9160e21b8152600160048201526001600160a01b039091166024820152604490fdfea26469706673582212203d0353f62b3f52bfc32edb3364a7d36c07817e18eaa6724c326e7b25d5ca5d3464736f6c63430008110033";

type SignatoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignatoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Signatory__factory extends ContractFactory {
  constructor(...args: SignatoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Signatory> {
    return super.deploy(overrides || {}) as Promise<Signatory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Signatory {
    return super.attach(address) as Signatory;
  }
  override connect(signer: Signer): Signatory__factory {
    return super.connect(signer) as Signatory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatoryInterface {
    return new utils.Interface(_abi) as SignatoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Signatory {
    return new Contract(address, _abi, signerOrProvider) as Signatory;
  }
}
