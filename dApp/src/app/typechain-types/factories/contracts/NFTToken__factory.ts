/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTToken, NFTTokenInterface } from "../../contracts/NFTToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234620003635762001a61803803806200001d8162000368565b9283398101604082820312620003635781516001600160401b0392908381116200036357826200004f9183016200038e565b906020928382015185811162000363576200006b92016200038e565b9281518181116200034d576000938454916001948584811c9416801562000342575b838510146200032e578190601f94858111620002db575b508390858311600114620002775788926200026b575b5050600019600383901b1c191690851b1785555b8551928311620002575783548481811c911680156200024c575b828210146200023857828111620001f0575b50809183116001146200018a57508394829394926200017e575b5050600019600383901b1c191690821b1790555b60078054336001600160a01b031982168117909255604051926001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36116609081620004018239f35b01519050388062000114565b90601f198316958486528286209286905b888210620001d85750508385969710620001be575b505050811b01905562000128565b015160001960f88460031b161c19169055388080620001b0565b8087859682949686015181550195019301906200019b565b8486528186208380860160051c8201928487106200022e575b0160051c019085905b82811062000222575050620000fa565b87815501859062000212565b9250819262000209565b634e487b7160e01b86526022600452602486fd5b90607f1690620000e8565b634e487b7160e01b85526041600452602485fd5b015190503880620000ba565b8880528489208894509190601f1984168a5b87828210620002c45750508411620002aa575b505050811b018555620000ce565b015160001960f88460031b161c191690553880806200029c565b8385015186558b9790950194938401930162000289565b9091508780528388208580850160051c82019286861062000324575b918991869594930160051c01915b82811062000315575050620000a4565b8a815585945089910162000305565b92508192620002f7565b634e487b7160e01b87526022600452602487fd5b93607f16936200008d565b634e487b7160e01b600052604160045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200034d57604052565b919080601f84011215620003635782516001600160401b0381116200034d57602090620003c4601f8201601f1916830162000368565b92818452828287010111620003635760005b818110620003ec57508260009394955001015290565b8581018301518482018401528201620003d656fe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a714610b835750806306fdde0314610adb578063081812fc14610abb578063095ea7b31461094e57806323b872dd1461092957806342842e0e146108f55780636352211e146108c457806370a082311461082e578063715018a6146107d15780638da5cb5b146107a857806395d89b41146106c5578063a22cb465146105f6578063b88d4fde1461056d578063c87b56dd14610532578063d204c45e146101f9578063e985e9c5146101a75763f2fde38b146100de57600080fd5b346101a35760203660031901126101a3576100f7610c37565b90610100610d60565b6001600160a01b03918216928315610151575050600754826001600160601b0360a01b821617600755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5050346101f557806003193601126101f55760ff816020936101c7610c37565b6101cf610c52565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b5090346101a357806003193601126101a357610213610c37565b67ffffffffffffffff906024803583811161052e573660238201121561052e5761024590369083818901359101610d29565b9061024e610d60565b60085494600195868101600855815161026681610c9d565b8981526001600160a01b0386169586156104ec576000838152600260205260409020546001600160a01b03166104aa57868b5260209660038852848c208054908b820180921161049857928561030995938f8294610304975582815260028d52898120826001600160601b0360a01b8254161790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4611194565b610f5d565b6000818152600260205260409020546001600160a01b03161561043f57885260068452872095825194851161042e5750506103448554610e2a565b601f81116103e8575b5081601f84116001146103875750928293918392879461037c575b50501b916000199060031b1c191617905580f35b015192503880610368565b919083601f1981168789528489209489905b888383106103ce57505050106103b5575b505050811b01905580f35b015160001960f88460031b161c191690553880806103aa565b858701518855909601959485019487935090810190610399565b858752828720601f850160051c810191848610610424575b601f0160051c019085905b82811061041957505061034d565b88815501859061040b565b9091508190610400565b634e487b7160e01b88526041905286fd5b815162461bcd60e51b8152808901869052602e818501527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608490fd5b634e487b7160e01b8e5260118d52878efd5b835162461bcd60e51b81526020818c0152601c818701527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b835162461bcd60e51b81526020818c01819052818701527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606490fd5b8680fd5b50913461056a57602036600319011261056a5750610553610566923561133b565b9051918291602083526020830190610c12565b0390f35b80fd5b8382346101f55760803660031901126101f557610588610c37565b90610591610c52565b916044356064359367ffffffffffffffff85116105f257366023860112156105f2576105cc610304948660246105ef98369301359101610d29565b926105df6105da8433610f81565b610ea7565b6105ea838383610fef565b6112b0565b80f35b8580fd5b5090346101a357806003193601126101a357610610610c37565b90602435918215158093036106c1576001600160a01b03169233841461067f5750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b8480fd5b5050346101f557816003193601126101f5578051908260018054916106e983610e2a565b808652928281169081156107805750600114610724575b50505061071282610566940383610ceb565b51918291602083526020830190610c12565b94508085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828610610768575050506107128260206105669582010194610700565b8054602087870181019190915290950194810161074b565b61056697508693506020925061071294915060ff191682840152151560051b82010194610700565b5050346101f557816003193601126101f55760075490516001600160a01b039091168152602090f35b833461056a578060031936011261056a576107ea610d60565b600780546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b508290346101f55760203660031901126101f5576001600160a01b03610852610c37565b1690811561086f5760208480858581526003845220549051908152f35b608490602085519162461bcd60e51b8352820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152fd5b50913461056a57602036600319011261056a57506108e460209235610e04565b90516001600160a01b039091168152f35b5050346101f5576103046105ef9161090c36610c68565b9192519261091984610c9d565b8684526105df6105da8433610f81565b833461056a576105ef61093b36610c68565b916109496105da8433610f81565b610fef565b50346101a357816003193601126101a357610967610c37565b6024359290916001600160a01b039190828061098287610e04565b16941693808514610a6e57803314908115610a4f575b50156109e757848652602052842080546001600160a01b031916831790556109bf83610e04565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152fd5b90508652600560205281862033875260205260ff828720541638610998565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b50913461056a57602036600319011261056a57506108e460209235610e64565b5050346101f557816003193601126101f557805190828054610afc81610e2a565b808552916001918083169081156107805750600114610b275750505061071282610566940383610ceb565b80809650527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828610610b6b575050506107128260206105669582010194610700565b80546020878701810191909152909501948101610b4e565b925050346101a35760203660031901126101a3573563ffffffff60e01b81168091036101a357602092506380ac58cd60e01b8114908115610bde575b8115610bcd575b5015158152f35b6301ffc9a760e01b14905038610bc6565b635b5e139f60e01b81149150610bbf565b60005b838110610c025750506000910152565b8181015183820152602001610bf2565b90602091610c2b81518092818552858086019101610bef565b601f01601f1916010190565b600435906001600160a01b0382168203610c4d57565b600080fd5b602435906001600160a01b0382168203610c4d57565b6060906003190112610c4d576001600160a01b03906004358281168103610c4d57916024359081168103610c4d579060443590565b6020810190811067ffffffffffffffff821117610cb957604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610cb957604052565b90601f8019910116810190811067ffffffffffffffff821117610cb957604052565b67ffffffffffffffff8111610cb957601f01601f191660200190565b929192610d3582610d0d565b91610d436040519384610ceb565b829481845281830111610c4d578281602093846000960137010152565b6007546001600160a01b03163303610d7457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b15610dbf57565b60405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6000908152600260205260409020546001600160a01b0316610e27811515610db8565b90565b90600182811c92168015610e5a575b6020831014610e4457565b634e487b7160e01b600052602260045260246000fd5b91607f1691610e39565b600081815260026020526040902054610e8c906001600160a01b03161515610db8565b610db8565b6000908152600460205260409020546001600160a01b031690565b15610eae57565b60405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b15610f6457565b60405162461bcd60e51b815280610f7d60048201610f0a565b0390fd5b906001600160a01b038080610f9584610e04565b16931691838314938415610fc8575b508315610fb2575b50505090565b610fbe91929350610e64565b1614388080610fac565b909350600052600560205260406000208260005260205260ff604060002054169238610fa4565b610ff883610e04565b6001600160a01b0392918316919083168290036111415782169182156110f0576000908482526004602052848260408120926001600160601b0360a01b9384815416905561104583610e04565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258280a482825260036020526040822080546000198101919082116110dc5755838252600360205260408220805490600182018092116110dc57558482526002602052604082208054909116841790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a4565b634e487b7160e01b84526011600452602484fd5b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b9192600092909190803b156112a6576111e2946040518092630a85bd0160e11b9485835233600484015287602484015260448301526080606483015281878160209a8b966084830190610c12565b03926001600160a01b03165af1849181611266575b50611255575050503d60001461124d573d61121181610d0d565b9061121f6040519283610ceb565b81528091833d92013e5b8051918261124a5760405162461bcd60e51b815280610f7d60048201610f0a565b01fd5b506060611229565b6001600160e01b0319161492509050565b9091508581813d831161129f575b61127e8183610ceb565b810103126106c157516001600160e01b0319811681036106c15790386111f7565b503d611274565b5050915050600190565b9293600093909291803b156113305794849161130a9660405180948193630a85bd0160e11b9788845233600485015260018060a01b0380921660248501526044840152608060648401528260209b8c976084830190610c12565b0393165af18491816112665750611255575050503d60001461124d573d61121181610d0d565b505050915050600190565b60008181526002602052604090205461135e906001600160a01b03161515610db8565b6000908082526020916006835260409081812092825191808386549161138383610e2a565b92838352898301986001918b83821691826000146115045750506001146114c8575b50506113b392500384610ceb565b8351906113bf82610ccf565b6019958683527f68747470733a2f2f68657269746167652e78797a2f6e66742f000000000000009485898501528051611470575050505091610e27939161143f84611426610e876114509997600052600260205260018060a01b0360406000205416151590565b83519461143286610ccf565b8552858501928352611524565b915195869351809286860190610bef565b820161146482518093868085019101610bef565b01038084520182610ceb565b9295919450925051958694845b8781106114b257505050916114a38492610e279694603980970193845251928391610bef565b81010390810184520182610ceb565b818101830151898201840152889650820161147d565b8a925085528185209085915b8583106114ec5750506113b3935082010138806113a5565b8054838a018501528894508b939092019181016114d4565b92509350506113b394915060ff19168952151560051b82010138806113a5565b80156115fb57600081805b6115e3575061153d81610d0d565b9061154b6040519283610ceb565b808252601f1961155a82610d0d565b013660208401375b809280156115dc5760001982019182116115c6578193600a9260309084840682018092116115c657855111156115b05760f81b6001600160f81b03191660001a908401601f01530491611562565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b5050905090565b9060001981146115c6576001600a910191048061152f565b506040516040810181811067ffffffffffffffff821117610cb95760405260018152600360fc1b60208201529056fea2646970667358221220e86fc3428db71a773b02a9d8e101733293fc029d573f22b98c36a715b7011d2264736f6c63430008110033";

type NFTTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTToken__factory extends ContractFactory {
  constructor(...args: NFTTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTToken> {
    return super.deploy(name, symbol, overrides || {}) as Promise<NFTToken>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): NFTToken {
    return super.attach(address) as NFTToken;
  }
  override connect(signer: Signer): NFTToken__factory {
    return super.connect(signer) as NFTToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTTokenInterface {
    return new utils.Interface(_abi) as NFTTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTToken {
    return new Contract(address, _abi, signerOrProvider) as NFTToken;
  }
}
