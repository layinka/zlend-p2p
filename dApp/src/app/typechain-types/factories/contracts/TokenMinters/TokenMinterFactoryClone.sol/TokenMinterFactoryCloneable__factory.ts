/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TokenMinterFactoryCloneable,
  TokenMinterFactoryCloneableInterface,
} from "../../../../contracts/TokenMinters/TokenMinterFactoryClone.sol/TokenMinterFactoryCloneable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "createdTokenAddress",
        type: "address",
      },
    ],
    name: "TokenCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_tokensList",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "allOwnersTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TokenMinterFactoryCloneable.TokenTypes",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    name: "createNewToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TokenMinterFactoryCloneable.TokenTypes",
        name: "tokenType",
        type: "uint8",
      },
    ],
    name: "getTokenTypeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "setTokenFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TokenMinterFactoryCloneable.TokenTypes",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setZSaleNativeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenAt",
    outputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
    ],
    name: "tryGetTokenByKey",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461009b5760008054336001600160a01b031980831682178455660aa87bee538000936040939092906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08480a330906006541617600655808052600560205266038d7ea4c6800082822055600181526605543df729c0008282205560028152205561220590816100a18239f35b600080fdfe60806040526004361015610013575b600080fd5b60003560e01c80632591543a146101175780632c6938681461010e57806338caf3bd1461010557806349df728c146100fc5780634b695ab0146100f3578063680fbe00146100ea578063715018a6146100e15780638da5cb5b146100d857806392a91a3a146100cf578063a64ed8ba146100c6578063c77b63ae146100bd578063e6bcd7fa146100b45763f2fde38b146100ac57600080fd5b61000e6108b5565b5061000e6107f6565b5061000e610782565b5061000e610763565b5061000e6106ef565b5061000e6106c5565b5061000e610666565b5061000e610635565b5061000e610608565b5061000e610560565b5061000e6102ee565b5061000e6101b9565b5061000e61015d565b50634e487b7160e01b600052603260045260246000fd5b8054821015610150575b60005260206000200190600090565b610158610120565b610141565b503461000e57602036600319011261000e5760043560085481101561000e5760086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301546040516001600160a01b039091168152602090f35b503461000e57602036600319011261000e5760406101d8600435610f90565b825191151582526001600160a01b03166020820152f35b60043590600382101561000e57565b50634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761023157604052565b6102396101fe565b604052565b6080810190811067ffffffffffffffff82111761023157604052565b90601f8019910116810190811067ffffffffffffffff82111761023157604052565b60209067ffffffffffffffff811161029a575b601f01601f19160190565b6102a26101fe565b61028f565b81601f8201121561000e578035906102be8261027c565b926102cc604051948561025a565b8284526020838301011161000e57816000926020809301838601378301015290565b5060a036600319011261000e576103036101ef565b67ffffffffffffffff60243581811161000e576103249036906004016102a7565b60443582811161000e5761033c9036906004016102a7565b6064359260ff8416840361000e5761035f610356866109ff565b54341015610a18565b61036d600160045401600455565b6004549461037a816109e6565b6103848154610a8f565b905561038f816109c6565b8061051b57509160009291610424849360405180916111ac808301918383109083111761050e575b6110248339039085f08015610501575b6001600160a01b0316956103e2876103dd610ab8565b610fc0565b600654610416906001600160a01b03166040519485936020850197636b458a4d60e11b895233926084359160248801610b25565b03601f19810183528261025a565b5190845af4610431610b73565b90156104b057506104ab816104677f6e50c57fa9be8b1386690b36260e9d5dc05d1f39d3e9e80aa4f1e09fdf9632169385610c68565b50336000908152600760205260409020610482908590610ba3565b61048b81610be8565b604080513381526001600160a01b03909216602083015290918291820190565b0390a2005b8051156104bf57805190602001fd5b60405162461bcd60e51b8152602060048201526016602482015275119d5b98dd1a5bdb8818d85b1b081c995d995c9d195960521b6044820152606490fd5b0390fd5b610509610aab565b6103c7565b6105166101fe565b6103b7565b94505050505061052a816109c6565b60018103610535575b005b610533906109c6565b602090600319011261000e576004356001600160a01b038116810361000e5790565b503461000e5761056f3661053e565b61057761096e565b6040516370a0823160e01b8152306004820152906001600160a01b0316602082602481845afa9182156105fb575b6000926105c4575b61053383836105bd821515610d7d565b3390610dd8565b6020813d82116105f3575b816105dc6020938361025a565b810103126105ef575191506105336105ad565b8280fd5b3d91506105cf565b610603610aab565b6105a5565b503461000e57602036600319011261000e57602061062c6106276101ef565b6109e6565b54604051908152f35b503461000e57604036600319011261000e5761064f6101ef565b61065761096e565b610663602435916109ff565b55005b503461000e576000806003193601126106c25761068161096e565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b503461000e57600036600319011261000e576000546040516001600160a01b039091168152602090f35b503461000e57602036600319011261000e576040600435600154811015610756575b7fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6015480600052600360205260018060a01b0382600020541682519182526020820152f35b61075e610120565b610711565b503461000e57600036600319011261000e576020600454604051908152f35b503461000e576107913661053e565b61079961096e565b600680546001600160a01b0319166001600160a01b0392909216919091179055005b6020908160408183019282815285518094520193019160005b8281106107e2575050505090565b8351855293810193928101926001016107d4565b503461000e5760408060031936011261000e5760243560043561081882610d1d565b6108248451918261025a565b828152601f1961083384610d1d565b0160209036828401378293830180841194855b6108a8575b81811015610897578061087861086e610891938a60003381526007895220610137565b90549060031b1c90565b61088b6108858884610d44565b87610d5b565b52610a8f565b85610846565b8651806108a486826107bb565b0390f35b6108b0610a78565b61084b565b503461000e576108c43661053e565b6108cc61096e565b6001600160a01b03908116801561091a57600080546001600160a01b03198116831782559092167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6000546001600160a01b0316330361098257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600311156109d057565b634e487b7160e01b600052602160045260246000fd5b60038110156109d0576000526009602052604060002090565b60038110156109d0576000526005602052604060002090565b15610a1f57565b60405162461bcd60e51b815260206004820152602b60248201527f546f6b656e466163746f72793a20526571756972657320546f6b656e2043726560448201526a6174696f6e20507269636560a81b6064820152608490fd5b50634e487b7160e01b600052601160045260246000fd5b6001906000198114610a9f570190565b610aa7610a78565b0190565b506040513d6000823e3d90fd5b60405190610ac582610215565b601182527003732bbaa37b5b2b720b2323932b9b99d1607d1b6020830152565b919082519283825260005b848110610b11575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610af0565b949296959193610b5360a095610b4560ff9460c08a5260c08a0190610ae5565b9088820360208a0152610ae5565b976040870152166060850152600180841b03809216608085015216910152565b3d15610b9e573d90610b848261027c565b91610b92604051938461025a565b82523d6000602084013e565b606090565b8054610bc191600160401b821015610bdb575b600182018155610137565b819291549060031b600019811b9283911b16911916179055565b610be36101fe565b610bb6565b600854600160401b811015610c5b575b6001810180600855811015610c4e575b60086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b03909216919091179055565b610c56610120565b610c08565b610c636101fe565b610bf8565b610c889181600052600360205260018060a01b0316604060002055610c8b565b90565b80600052600260205260406000205415600014610d175780600154600160401b811015610d0a575b6001810180600155811015610cfd575b7fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60155600154906000526002602052604060002055600190565b610d05610120565b610cc3565b610d126101fe565b610cb3565b50600090565b60209067ffffffffffffffff8111610d37575b60051b0190565b610d3f6101fe565b610d30565b91908203918211610d5157565b610d59610a78565b565b6020918151811015610d70575b60051b010190565b610d78610120565b610d68565b15610d8457565b60405162461bcd60e51b815260206004820152602660248201527f546f6b656e4d696e746572466163746f72793a204e6f20546f6b656e7320746f60448201526520636c61696d60d01b6064820152608490fd5b60405163a9059cbb60e01b60208083019182526001600160a01b03948516602484015260448084019690965294825290929091610e148461023e565b169060405192610e2384610215565b8484527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656485850152823b15610e9457610e6f939260009283809351925af1610e69610b73565b90610f50565b80519081610e7c57505050565b82610d5993610e8f938301019101610ed9565b610ef1565b60405162461bcd60e51b815260048101869052601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b9081602091031261000e5751801515810361000e5790565b15610ef857565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b90919015610f5c575090565b815115610f6c5750805190602001fd5b60405162461bcd60e51b8152602060048201529081906104fd906024830190610ae5565b60005260036020526040600020548015600014610fbb57506002602052604060002054151590600090565b600191565b6000919082916110106040518092610ff1602083019563319af33360e01b8752604060248501526064840190610ae5565b6001600160a01b0391909116604483015203601f19810183528261025a565b51906a636f6e736f6c652e6c6f675afa5056fe6080806040523461001b5760c860665561118b90816100218239f35b600080fdfe60806040526004361015610013575b600080fd5b60003560e01c806306fdde0314610103578063095ea7b3146100fa57806318160ddd146100f157806323b872dd146100e8578063313ce567146100df57806339509351146100d657806370a08231146100cd57806395d89b41146100c4578063a457c2d7146100bb578063a9059cbb146100b2578063d68b149a146100a95763dd62ed3e146100a157600080fd5b61000e610707565b5061000e610682565b5061000e6105b0565b5061000e610501565b5061000e610459565b5061000e61041e565b5061000e6103bc565b5061000e61039a565b5061000e6102ce565b5061000e6102af565b5061000e61027d565b5061000e610155565b6020808252825181830181905290939260005b82811061014157505060409293506000838284010152601f8019910116010190565b81810186015184820160400152850161011f565b503461000e5760008060031936011261023857604051908060365461017981610760565b8085529160019180831690811561020e57506001146101b3575b6101af856101a3818703826105ee565b6040519182918261010c565b0390f35b9250603683527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b85b8284106101f65750505081016020016101a3826101af610193565b805460208587018101919091529093019281016101db565b8695506101af969350602092506101a394915060ff191682840152151560051b8201019293610193565b80fd5b600435906001600160a01b038216820361000e57565b602435906001600160a01b038216820361000e57565b60a435906001600160a01b038216820361000e57565b503461000e57604036600319011261000e576102a461029a61023b565b602435903361099c565b602060405160018152f35b503461000e57600036600319011261000e576020603554604051908152f35b503461000e57606036600319011261000e576102e861023b565b6102f0610251565b6001600160a01b038216600090815260346020908152604080832033845290915290206044359190549260018401610339575b61032d935061087b565b60405160018152602090f35b828410610355576103508361032d9503338361099c565b610323565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b503461000e57600036600319011261000e57602060ff60655416604051908152f35b503461000e57604036600319011261000e576102a46103d961023b565b3360009081526034602090815260408083206001600160a01b0385168452909152902054906024358201809211610411575b3361099c565b61041961079a565b61040b565b503461000e57602036600319011261000e576001600160a01b0361044061023b565b1660005260336020526020604060002054604051908152f35b503461000e5760008060031936011261023857604051908060375461047d81610760565b8085529160019180831690811561020e57506001146104a6576101af856101a3818703826105ee565b9250603783527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae5b8284106104e95750505081016020016101a3826101af610193565b805460208587018101919091529093019281016104ce565b503461000e57604036600319011261000e5761051b61023b565b602435903360005260346020526105488160406000209060018060a01b0316600052602052604060002090565b549180831061055d5761032d9203903361099c565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b503461000e57604036600319011261000e576102a46105cd61023b565b602435903361087b565b50634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761061057604052565b6106186105d7565b604052565b81601f8201121561000e5780359067ffffffffffffffff8211610675575b60405192610653601f8401601f1916602001856105ee565b8284526020838301011161000e57816000926020809301838601378301015290565b61067d6105d7565b61063b565b503461000e5760c036600319011261000e5767ffffffffffffffff60043581811161000e576106b590369060040161061d565b9060243590811161000e576106ce90369060040161061d565b60643560ff8116810361000e57608435906001600160a01b038216820361000e57610705936106fb610267565b9360443591610ac7565b005b503461000e57604036600319011261000e57602061075761072661023b565b61072e610251565b6001600160a01b0391821660009081526034855260408082209290931681526020919091522090565b54604051908152f35b90600182811c92168015610790575b602083101461077a57565b634e487b7160e01b600052602260045260246000fd5b91607f169161076f565b50634e487b7160e01b600052601160045260246000fd5b919082018092116107be57565b6107c661079a565b565b156107cf57565b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b1561082757565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b916001600160a01b03808416929091831561094957610927827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef946109449416966108c78815156107c8565b6001600160a01b038116600090815260336020526040902061090c908590546108f282821015610820565b039160018060a01b03166000526033602052604060002090565b556001600160a01b0316600090815260336020526040902090565b6109328282546107b1565b90556040519081529081906020820190565b0390a3565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b038082169291908315610a76578216938415610a265780610a157f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925946109fe6109449560018060a01b03166000526034602052604060002090565b9060018060a01b0316600052602052604060002090565b556040519081529081906020820190565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b9391949290946000549560ff8760081c161580978198610be9575b8115610bc9575b5015610b6d57610b0f9587610b06600160ff196000541617600055565b610b5457610c62565b610b1557565b610b2561ff001960005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1565b610b6861010061ff00196000541617600055565b610c62565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b303b15915081610bdb575b5038610ae9565b6001915060ff161438610bd4565b600160ff8216109150610ae2565b604051906040820182811067ffffffffffffffff821117610c35575b604052601082526f24b734ba34b0b634bd34b7339717171760811b6020830152565b610c3d6105d7565b610c13565b818102929181159184041417156107be57565b919082039182116107be57565b949294939193610c8260ff60005460081c16610c7d81610df7565b610df7565b80519067ffffffffffffffff8211610dea575b610ca982610ca4603654610760565b610e57565b60209081601f8411600114610d515750610d36959383610d31946107c69a999794610cf094600092610d46575b50508160011b916000199060031b1c191617603655610f39565b610cfa60c8606655565b610d0a610d05610bf7565b61110e565b610d2b610d24610d1c60665487610c42565b612710900490565b8095610c55565b90611031565b611031565b60ff1660ff196065541617606555565b015190503880610cd6565b60366000529190601f1984167f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b8936000905b828210610dd2575050846107c69a999794610cf094610d369a9894610d319860019510610db9575b505050811b01603655610f39565b015160001960f88460031b161c19169055388080610dab565b80600186978294978701518155019601940190610d83565b610df26105d7565b610c95565b15610dfe57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b601f8111610e63575050565b600090603682527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b8906020601f850160051c83019410610ebe575b601f0160051c01915b828110610eb357505050565b818155600101610ea7565b9092508290610e9e565b601f8111610ed4575050565b600090603782527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae906020601f850160051c83019410610f2f575b601f0160051c01915b828110610f2457505050565b818155600101610f18565b9092508290610f0f565b90815167ffffffffffffffff8111611024575b610f6081610f5b603754610760565b610ec8565b602080601f8311600114610f9c5750819293600092610f91575b50508160011b916000199060031b1c191617603755565b015190503880610f7a565b90601f19831694610fcf60376000527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae90565b926000905b87821061100c575050836001959610610ff3575b505050811b01603755565b015160001960f88460031b161c19169055388080610fe8565b80600185968294968601518155019501930190610fd4565b61102c6105d7565b610f4c565b6001600160a01b0381169182156110c95760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef916110976000946035548381018091116110bc575b6035556001600160a01b0316600090815260336020526040902090565b8054908282018092116110af575b55604051908152a3565b6110b761079a565b6110a5565b6110c461079a565b61107a565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b6000809160405161114281611134602082019463104c13eb60e21b86526024830161010c565b03601f1981018352826105ee565b51906a636f6e736f6c652e6c6f675afa5056fea26469706673582212207d74de3df43e16bc082c676e0bdbae4eccf056e7888647e289a42fbebef6ce1b64736f6c63430008110033a2646970667358221220425e897548de3b03f2767c9c61ae9c5468350e5b29692165d5d7c1d5ad3d7bd664736f6c63430008110033";

type TokenMinterFactoryCloneableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenMinterFactoryCloneableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenMinterFactoryCloneable__factory extends ContractFactory {
  constructor(...args: TokenMinterFactoryCloneableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenMinterFactoryCloneable> {
    return super.deploy(
      overrides || {}
    ) as Promise<TokenMinterFactoryCloneable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenMinterFactoryCloneable {
    return super.attach(address) as TokenMinterFactoryCloneable;
  }
  override connect(signer: Signer): TokenMinterFactoryCloneable__factory {
    return super.connect(signer) as TokenMinterFactoryCloneable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenMinterFactoryCloneableInterface {
    return new utils.Interface(_abi) as TokenMinterFactoryCloneableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenMinterFactoryCloneable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TokenMinterFactoryCloneable;
  }
}
